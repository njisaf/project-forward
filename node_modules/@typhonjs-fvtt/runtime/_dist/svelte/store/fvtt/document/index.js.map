{"version":3,"file":"index.js","sources":["../../../../../../../../../../../../../../program/Javascript/projects/TyphonJS/typhonjs-fvtt-lib/types-fvtt-shim/dist/guard/index.js","../../../../../../../../../../../../../../program/Javascript/projects/TyphonJS/typhonjs-fvtt-lib/svelte/_dist/store/fvtt/document/index.js"],"sourcesContent":["function isDocument(doc) {\n    return doc !== void 0 && doc !== null && doc instanceof foundry.abstract.Document;\n}\nfunction isDocumentClass(doc) {\n    return doc !== void 0 && doc !== null && Object.prototype.isPrototypeOf.call(foundry.abstract.Document, doc);\n}\nfunction isDocumentCollection(collection) {\n    return collection !== void 0 && collection !== null && collection instanceof DocumentCollection;\n}\nfunction isEmbeddedCollection(collection) {\n    return collection !== void 0 && collection !== null && collection instanceof foundry.abstract.EmbeddedCollection;\n}\nfunction isFolder(doc) {\n    return doc !== void 0 && doc !== null && doc instanceof Folder;\n}\nfunction isFolderClass(doc) {\n    return doc !== void 0 && doc !== null && Object.prototype.isPrototypeOf.call(Folder, doc);\n}\n\nexport { isDocument, isDocumentClass, isDocumentCollection, isEmbeddedCollection, isFolder, isFolderClass };\n//# sourceMappingURL=index.js.map\n","import { tick } from 'svelte';\nimport { Hashing } from '@typhonjs-svelte/runtime-base/util';\nimport { hasPrototype, isObject, isPlainObject } from '@typhonjs-svelte/runtime-base/util/object';\nimport { isDocument, isDocumentCollection } from '@typhonjs-fvtt/types-fvtt-shim/guard';\nimport { DynMapReducer } from '@typhonjs-svelte/runtime-base/svelte/store/reducer';\n\n/**\n * Provides management of reactive embedded collections.\n *\n * @privateRemarks\n * TODO: Consider subscribing to TJSDocument rather than exposing {@link EmbeddedStoreManager.handleDocChange} and\n * {@link EmbeddedStoreManager.handleUpdate}\n */\nclass EmbeddedStoreManager {\n    /**\n     * RegExp for detecting CRUD updates for the associated document.\n     */\n    static #updateActionRegex = /(?<action>create|delete|update)(?<sep>\\.?)(?<name>\\w+)/;\n    /**\n     */\n    #name = new Map();\n    /**\n     * Source document.\n     */\n    #document;\n    /**\n     * Reverse lookup for older Foundry versions.\n     */\n    #collectionToDocName = new Map();\n    /**\n     * Valid embedded collection actions.\n     */\n    #embeddedNames = new Set();\n    /**\n     * @param document - The associated document holder.\n     */\n    constructor(document) {\n        this.#document = document;\n        this.handleDocChange();\n        Object.seal(this);\n    }\n    /**\n     * Create a reactive embedded collection store. When no options are provided the name of the embedded collection\n     * matches the document name.\n     *\n     * @param FoundryDoc - A Foundry document.\n     *\n     * @param [options] - Dynamic reducer create options.\n     *\n     * @typeParam D `Foundry Document`.\n     *\n     * @typeParam O `CreateOptions` - Embedded API create options.\n     */\n    create(FoundryDoc, options) {\n        const docName = FoundryDoc?.documentName;\n        if (typeof docName !== 'string') {\n            throw new TypeError(`EmbeddedStoreManager.create error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n        }\n        const doc = this.#document[0];\n        let collection = null;\n        if (doc) {\n            try {\n                collection = doc.getEmbeddedCollection(docName);\n            }\n            catch (err) {\n                console.warn(`EmbeddedStoreManager.create error: No valid embedded collection for: ${docName}`);\n            }\n        }\n        let embeddedData = this.#name.get(docName);\n        if (!embeddedData) {\n            embeddedData = {\n                collection,\n                stores: new Map()\n            };\n            this.#name.set(docName, embeddedData);\n        }\n        /**\n         * Reducer name\n         */\n        let name;\n        /**\n         * Rest of common reducer options.\n         */\n        let rest = {};\n        /**\n         * Reducer constructor function.\n         */\n        let ctor;\n        if (typeof options === 'string') {\n            name = options;\n            ctor = DynMapReducer;\n        }\n        else if (typeof options === 'function' && hasPrototype(options, DynMapReducer)) {\n            ctor = options;\n        }\n        else if (isObject(options)) {\n            ({ name, ctor = DynMapReducer, ...rest } = options);\n        }\n        else {\n            name = docName;\n            ctor = DynMapReducer;\n        }\n        if (!hasPrototype(ctor, DynMapReducer)) {\n            throw new TypeError(`EmbeddedStoreManager.create error: 'ctor' is not a 'DynMapReducer'.`);\n        }\n        name = name ?? ctor?.name;\n        if (typeof name !== 'string') {\n            throw new TypeError(`EmbeddedStoreManager.create error: 'name' is not a string.`);\n        }\n        if (embeddedData.stores.has(name)) {\n            return embeddedData.stores.get(name);\n        }\n        else {\n            const reducerOptions = collection ? { data: collection, ...rest } : { ...rest };\n            const instance = new ctor(reducerOptions);\n            embeddedData.stores.set(name, instance);\n            // Invoke protected initialize method.\n            if (typeof instance?.initialize === 'function') {\n                instance.initialize(rest);\n            }\n            return instance;\n        }\n    }\n    /**\n     * Destroys one or more embedded collection reducers. When no `reducerName` is provided all reactive embedded\n     * collections are destroyed for the given document type.\n     *\n     * @param FoundryDoc - A Foundry document class constructor.\n     *\n     * @param [reducerName] - Optional name of a specific reducer to destroy.\n     *\n     * @typeParam D `Foundry Document`.\n     */\n    destroy(FoundryDoc, reducerName) {\n        let count = 0;\n        // Destroy all embedded stores\n        if (FoundryDoc === void 0) {\n            for (const embeddedData of this.#name.values()) {\n                embeddedData.collection = null;\n                for (const store of embeddedData.stores.values()) {\n                    store.destroy();\n                    count++;\n                }\n            }\n            this.#name.clear();\n        }\n        else {\n            const docName = FoundryDoc?.documentName;\n            if (typeof docName !== 'string') {\n                throw new TypeError(`EmbeddedStoreManager.delete error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n            }\n            if (reducerName === void 0) {\n                const embeddedData = this.#name.get(docName);\n                if (embeddedData) {\n                    embeddedData.collection = null;\n                    for (const store of embeddedData.stores.values()) {\n                        store.destroy();\n                        count++;\n                    }\n                }\n                this.#name.delete(docName);\n            }\n            else if (reducerName === 'string') {\n                const embeddedData = this.#name.get(docName);\n                if (embeddedData) {\n                    const store = embeddedData.stores.get(reducerName);\n                    if (store) {\n                        store.destroy();\n                        count++;\n                    }\n                }\n            }\n        }\n        return count > 0;\n    }\n    /**\n     * Returns a specific existing embedded collection store. When no `reducerName` is provided the document name\n     * is used instead.\n     *\n     * @param FoundryDoc - A Foundry document class constructor.\n     *\n     * @param [reducerName] - Optional name of a specific reducer to get.\n     *\n     * @typeParam D `Foundry Document`.\n     *\n     * @returns The associated reactive embedded collection / reducer.\n     */\n    get(FoundryDoc, reducerName) {\n        const docName = FoundryDoc?.documentName;\n        if (typeof docName !== 'string') {\n            throw new TypeError(`EmbeddedStoreManager.get error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n        }\n        const embeddedData = this.#name.get(docName);\n        if (embeddedData) {\n            return embeddedData.stores.get(reducerName ?? docName);\n        }\n    }\n    /**\n     * Updates all existing embedded collection stores with the associated embedded collection\n     */\n    handleDocChange() {\n        const doc = this.#document[0];\n        if (isDocument(doc)) {\n            const existingEmbeddedNames = new Set(this.#name.keys());\n            /**\n             * All embedded names from associated document.\n             */\n            const embeddedNames = Object.entries(doc.constructor?.metadata?.embedded ?? []);\n            this.#collectionToDocName.clear();\n            // Remove all previously stored embedded name CRUD keys.\n            this.#embeddedNames.clear();\n            for (const [docName, collectionName] of embeddedNames) {\n                // Remove processed embedded doc name from existingEmbeddedNames set.\n                existingEmbeddedNames.delete(docName);\n                // Update CRUD keys for v10.\n                this.#embeddedNames.add(`create${docName}`);\n                this.#embeddedNames.add(`delete${docName}`);\n                this.#embeddedNames.add(`update${docName}`);\n                // Update CRUD keys for v11.\n                this.#embeddedNames.add(`create.${collectionName}`);\n                this.#embeddedNames.add(`delete.${collectionName}`);\n                this.#embeddedNames.add(`update.${collectionName}`);\n                // Update CRUD keys for v12.\n                this.#embeddedNames.add(`create${collectionName}`);\n                this.#embeddedNames.add(`delete${collectionName}`);\n                this.#embeddedNames.add(`update${collectionName}`);\n                // v10 collection to doc name lookup.\n                this.#collectionToDocName.set(docName, docName);\n                this.#collectionToDocName.set(collectionName, docName);\n                let collection = null;\n                try {\n                    // Update any existing stores with the actual collection.\n                    collection = doc.getEmbeddedCollection(docName);\n                }\n                catch (err) {\n                    console.warn(`EmbeddedStoreManager.handleDocUpdate error: No valid embedded collection for: ${docName}`);\n                }\n                // Update EmbeddedData for new collection.\n                const embeddedData = this.#name.get(docName);\n                if (embeddedData) {\n                    // A bit funky here, but Foundry collections modify the Map type.\n                    embeddedData.collection = collection;\n                    // Update all existing stores.\n                    for (const store of embeddedData.stores.values()) {\n                        store.setData(embeddedData.collection, true);\n                    }\n                }\n            }\n            // Update all existing embedded collections with null data that aren't processed above.\n            for (const embeddedName of existingEmbeddedNames) {\n                const embeddedData = this.#name.get(embeddedName);\n                if (embeddedData) {\n                    embeddedData.collection = null;\n                    for (const store of embeddedData.stores.values()) {\n                        store.setData(null, true);\n                    }\n                }\n            }\n        }\n        else // Reset all embedded reducer stores to null data.\n         {\n            this.#collectionToDocName.clear();\n            this.#embeddedNames.clear();\n            for (const embeddedData of this.#name.values()) {\n                embeddedData.collection = null;\n                for (const store of embeddedData.stores.values()) {\n                    store.setData(null, true);\n                }\n            }\n        }\n    }\n    /**\n     * Handles updates to embedded stores parsing the document update action for valid embedded store types.\n     *\n     * On create, delete, update parse the type being modified then force index updates for the embedded type.\n     *\n     * @param action - Update action from document.\n     */\n    handleUpdate(action) {\n        if (!this.#embeddedNames.has(action)) {\n            return;\n        }\n        const match = EmbeddedStoreManager.#updateActionRegex.exec(action);\n        if (match && match.groups) {\n            const docOrCollectionName = match.groups.name;\n            const embeddedName = this.#collectionToDocName.get(docOrCollectionName);\n            const embeddedData = this.#name.get(embeddedName);\n            if (embeddedData) {\n                for (const store of embeddedData.stores.values()) {\n                    store.index.update(true);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @typeParam D `Foundry Document`.\n */\nclass TJSDocument {\n    /**\n     * Fake Application API that ClientDocumentMixin uses for document model callbacks.\n     */\n    #callbackAPI;\n    /**\n     * Wrapped document.\n     */\n    #document = [void 0];\n    /**\n     *\n     */\n    #embeddedStoreManager;\n    /**\n     *\n     */\n    #embeddedAPI;\n    /**\n     * UUIDv4 assigned to this instance.\n     */\n    #uuidv4;\n    /**\n     *\n     */\n    #options = {};\n    /**\n     * All current subscribers.\n     */\n    #subscribers = [];\n    /**\n     * Latest update options processed.\n     */\n    #updateOptions;\n    /**\n     * @param [document] - Document to wrap or TJSDocumentOptions.\n     *\n     * @param [options] - TJSDocument options.\n     */\n    constructor(document, options = {}) {\n        this.#uuidv4 = `tjs-document-${Hashing.uuidv4()}`;\n        this.#callbackAPI = {\n            close: this.#deleted.bind(this),\n            render: this.#updateSubscribers.bind(this)\n        };\n        if (isPlainObject(document)) // Handle case when only options are passed into ctor.\n         {\n            this.setOptions(document);\n        }\n        else {\n            this.setOptions(options);\n            this.set(document);\n        }\n    }\n    /**\n     * @returns {import('./types').EmbeddedAPI} Embedded store manager.\n     */\n    get embedded() {\n        if (!this.#embeddedAPI) {\n            this.#embeddedStoreManager = new EmbeddedStoreManager(this.#document);\n            this.#embeddedAPI = {\n                create: (doc, options) => this.#embeddedStoreManager.create(doc, options),\n                destroy: (doc, storeName) => this.#embeddedStoreManager.destroy(doc, storeName),\n                get: (doc, storeName) => this.#embeddedStoreManager.get(doc, storeName)\n            };\n        }\n        return this.#embeddedAPI;\n    }\n    /**\n     * @returns Returns the options passed on last update.\n     */\n    get updateOptions() {\n        return this.#updateOptions ?? { action: 'unknown', data: [] };\n    }\n    /**\n     * @returns Returns the UUIDv4 assigned to this store.\n     */\n    get uuidv4() { return this.#uuidv4; }\n    /**\n     * Register the callback API with the underlying Foundry document.\n     */\n    #callbackRegister() {\n        const doc = this.#document[0];\n        if (isDocument(doc) && isObject(doc?.apps) && !doc.apps[this.#uuidv4]) {\n            doc.apps[this.#uuidv4] = this.#callbackAPI;\n        }\n    }\n    /**\n     * Unregister the callback API with the underlying Foundry document.\n     */\n    #callbackUnregister() {\n        const doc = this.#document[0];\n        if (isDocument(doc)) {\n            delete doc?.apps?.[this.#uuidv4];\n        }\n    }\n    /**\n     * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\n     *\n     * @returns Promise when completed.\n     */\n    async #deleted() {\n        const doc = this.#document[0];\n        // Check to see if the document is still in the associated collection to determine if actually deleted.\n        if (isDocument(doc) && !doc?.collection?.has(doc.id)) {\n            this.#setDocument(void 0);\n            if (typeof this.#options.preDelete === 'function') {\n                await this.#options.preDelete(doc);\n            }\n            this.#updateSubscribers(false, { action: 'delete' });\n            if (typeof this.#options.delete === 'function') {\n                await this.#options.delete(doc);\n            }\n            // Allow subscribers to be able to query `updateOptions` involving any reactive statements.\n            await tick();\n            this.#updateOptions = void 0;\n        }\n    }\n    /**\n     * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n     * ClientDocumentMixin `apps` tracking object.\n     */\n    destroy() {\n        if (this.#embeddedStoreManager) {\n            this.#embeddedStoreManager.destroy();\n            this.#embeddedStoreManager = void 0;\n            this.#embeddedAPI = void 0;\n        }\n        this.#setDocument(void 0);\n        this.#options.delete = void 0;\n        this.#options.preDelete = void 0;\n        this.#subscribers.length = 0;\n    }\n    /**\n     * @returns Current document\n     */\n    get() { return this.#document[0]; }\n    /**\n     * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\n     *\n     * @param data - Drop transfer data.\n     *\n     * @param [opts] - Optional parameters.\n     *\n     * @param [opts.compendium=true] - Accept compendium documents.\n     *\n     * @param [opts.world=true] - Accept world documents.\n     *\n     * @param [opts.types] - Require the `data.type` to match entry in `types`.\n     *\n     * @returns Foundry UUID for drop data.\n     */\n    static getUUIDFromDataTransfer(data, { compendium = true, world = true, types = void 0 } = {}) {\n        if (!isObject(data)) {\n            return void 0;\n        }\n        if (Array.isArray(types) && !types.includes(data.type)) {\n            return void 0;\n        }\n        let uuid = void 0;\n        if (typeof data.uuid === 'string') // v10 and above provides a full UUID.\n         {\n            const isCompendium = data.uuid.startsWith('Compendium');\n            if (isCompendium && compendium) {\n                uuid = data.uuid;\n            }\n            else if (world) {\n                uuid = data.uuid;\n            }\n        }\n        return uuid;\n    }\n    /**\n     * Sets a new document target to be monitored. To unset use `undefined` or `null`.\n     *\n     * @param doc - New document to set.\n     *\n     * @param [options] - New document update options to set.\n     */\n    set(doc, options = {}) {\n        if (doc !== void 0 && doc !== null && !isDocument(doc)) {\n            throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined / null.`);\n        }\n        if (!isObject(options)) {\n            throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n        }\n        // Only post an update if the document has changed.\n        if (this.#setDocument(doc)) {\n            // Only add registration if there are current subscribers.\n            if (isDocument(doc) && this.#subscribers.length) {\n                this.#callbackRegister();\n            }\n            this.#updateSubscribers(false, {\n                ...options,\n                action: `tjs-set-${doc === void 0 || doc === null ? 'undefined' : 'new'}`\n            });\n        }\n    }\n    /**\n     * Internally sets the new document being tracked.\n     *\n     * @param doc -\n     *\n     * @returns {boolean} Whether the document changed.\n     */\n    #setDocument(doc) {\n        const changed = doc !== this.#document[0];\n        // Unregister before setting new document state.\n        if (changed) {\n            this.#callbackUnregister();\n        }\n        this.#document[0] = doc === void 0 || doc === null ? void 0 : doc;\n        if (changed && this.#embeddedStoreManager) {\n            this.#embeddedStoreManager.handleDocChange();\n        }\n        return changed;\n    }\n    /**\n     * Potentially sets new document from data transfer object.\n     *\n     * @param data - Document transfer data.\n     *\n     * @param [options] - Optional parameters for {@link TJSDocument.getUUIDFromDataTransfer}.\n     *\n     * @returns Returns true if new document set from data transfer blob.\n     */\n    async setFromDataTransfer(data, options) {\n        return this.setFromUUID(TJSDocument.getUUIDFromDataTransfer(data, options));\n    }\n    /**\n     * Sets the document by Foundry UUID performing a lookup and setting the document if found.\n     *\n     * @param {string}   uuid - A Foundry UUID to lookup.\n     *\n     * @param {import('./types').TJSDocumentUpdateOptions}   [options] - New document update options to set.\n     *\n     * @returns {Promise<boolean>} True if successfully set document from UUID.\n     */\n    async setFromUUID(uuid, options) {\n        if (typeof uuid !== 'string' || uuid.length === 0) {\n            return false;\n        }\n        try {\n            const doc = await globalThis.fromUuid(uuid);\n            if (doc) {\n                this.set(doc, options);\n                return true;\n            }\n        }\n        catch (err) { /**/ }\n        return false;\n    }\n    /**\n     * Sets options for this document wrapper / store.\n     *\n     * @param options - Options for TJSDocument.\n     */\n    setOptions(options) {\n        if (!isObject(options)) {\n            throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\n        }\n        // Verify valid values -------------\n        if (options.delete !== void 0 && options.delete !== null && typeof options.delete !== 'function') {\n            throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function or null.`);\n        }\n        if (options.preDelete !== void 0 && options.preDelete !== null && typeof options.preDelete !== 'function') {\n            throw new TypeError(`TJSDocument error: 'preDelete' attribute in options is not a function or null.`);\n        }\n        // Set any valid values -------------\n        if (options.delete !== void 0) {\n            this.#options.delete = options.delete ?? void 0;\n        }\n        if (options.preDelete !== void 0) {\n            this.#options.preDelete = options.preDelete ?? void 0;\n        }\n    }\n    /**\n     * @param handler - Callback function that is invoked on update / changes.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        let addedSubscriber = false;\n        const currentIdx = this.#subscribers.findIndex((entry) => entry === handler);\n        if (currentIdx === -1) {\n            this.#subscribers.push(handler);\n            addedSubscriber = true;\n        }\n        if (addedSubscriber) {\n            // Register callback with first subscriber.\n            if (this.#subscribers.length === 1) {\n                this.#callbackRegister();\n            }\n            const updateOptions = { action: 'tjs-subscribe', data: [] };\n            handler(this.#document[0], updateOptions); // Call handler with current value and update options.\n        }\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscribers.findIndex((sub) => sub === handler);\n            if (index !== -1) {\n                this.#subscribers.splice(index, 1);\n            }\n            // Unsubscribe from document callback if there are no subscribers.\n            if (this.#subscribers.length === 0) {\n                this.#callbackUnregister();\n            }\n        };\n    }\n    /**\n     * @param [force] - unused - signature from Foundry render function.\n     *\n     * @param [options] - Options from render call; will have document update context.\n     */\n    #updateSubscribers(force, options = {}) {\n        // Shallow copy w/ remapped keys.\n        const optionsRemap = {\n            action: (options.action ?? options.renderContext ?? 'tjs-unknown'),\n            data: (options.data ?? options.renderData ?? [])\n        };\n        // Coerce `data` as necessary into an array to standardize receiving processing.\n        if (!Array.isArray(optionsRemap.data)) {\n            optionsRemap.data = [optionsRemap.data];\n        }\n        this.#updateOptions = optionsRemap;\n        const subscribers = this.#subscribers;\n        const doc = this.#document[0];\n        for (let cntr = 0; cntr < subscribers.length; cntr++) {\n            subscribers[cntr](doc, optionsRemap);\n        }\n        if (this.#embeddedStoreManager) {\n            this.#embeddedStoreManager.handleUpdate(optionsRemap.action);\n        }\n    }\n}\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @typeParam C `Foundry Collection`.\n */\nclass TJSDocumentCollection {\n    /**\n     * Fake Application API that DocumentCollection uses for document model callbacks.\n     */\n    #callbackAPI;\n    /**\n     * Collection being wrapped.\n     */\n    #collection = void 0;\n    /**\n     * UUIDv4 to associate as key with wrapped collection.\n     */\n    #uuidv4;\n    /**\n     * Configuration options.\n     */\n    #options = {};\n    /**\n     * All current subscribers.\n     */\n    #subscribers = [];\n    /**\n     * Latest update options processed.\n     */\n    #updateOptions;\n    /**\n     * @param [collection] - Collection to wrap or TJSDocumentCollectionOptions.\n     *\n     * @param [options] - TJSDocumentCollection options.\n     */\n    constructor(collection, options = {}) {\n        this.#uuidv4 = `tjs-collection-${Hashing.uuidv4()}`;\n        this.#callbackAPI = {\n            uuid: this.#uuidv4,\n            close: this.#deleted.bind(this),\n            render: this.#updateSubscribers.bind(this)\n        };\n        if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\n         {\n            this.setOptions(collection);\n        }\n        else {\n            this.setOptions(options);\n            this.set(collection);\n        }\n    }\n    /**\n     * Returns the options passed on last update.\n     *\n     * @returns Last update options.\n     */\n    get updateOptions() {\n        return this.#updateOptions ?? { action: 'unknown', data: [] };\n    }\n    /**\n     * Returns the UUIDv4 assigned to this store.\n     *\n     * @returns UUIDv4\n     */\n    get uuid() { return this.#uuidv4; }\n    /**\n     * Register the callback API with the underlying Foundry collection.\n     */\n    #callbackRegister() {\n        const collection = this.#collection;\n        if (isDocumentCollection(collection) && Array.isArray(collection?.apps)) {\n            const index = collection.apps.findIndex((sub) => sub === this.#callbackAPI);\n            if (index === -1) {\n                collection.apps.push(this.#callbackAPI);\n            }\n        }\n    }\n    /**\n     * Unregister the callback API with the underlying Foundry collection.\n     */\n    #callbackUnregister() {\n        const collection = this.#collection;\n        if (isDocumentCollection(this.#collection) && Array.isArray(collection?.apps)) {\n            const index = collection.apps.findIndex((sub) => sub === this.#callbackAPI);\n            if (index >= 0) {\n                collection.apps.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\n     *\n     * @returns {Promise<void>}\n     */\n    async #deleted() {\n        const collection = this.#collection;\n        this.#callbackUnregister();\n        this.#collection = void 0;\n        // Only invoke handlers and subscribers if the collection was defined.\n        if (collection) {\n            if (typeof this.#options.preDelete === 'function') {\n                await this.#options.preDelete(collection);\n            }\n            this.#updateSubscribers(false, { action: 'delete' });\n            if (typeof this.#options.delete === 'function') {\n                await this.#options.delete(collection);\n            }\n        }\n        // Allow subscribers to be able to query `updateOptions` involving any reactive statements.\n        await tick();\n        this.#updateOptions = void 0;\n    }\n    /**\n     * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n     * DocumentCollection `apps` tracking array.\n     */\n    destroy() {\n        this.#callbackUnregister();\n        this.#collection = void 0;\n        this.#options.delete = void 0;\n        this.#options.preDelete = void 0;\n        this.#subscribers.length = 0;\n    }\n    /**\n     * @returns Current collection if any.\n     */\n    get() { return this.#collection; }\n    /**\n     * Sets a new document collection target to be monitored. To unset use `undefined` or `null`.\n     *\n     * @param collection - New collection to set.\n     *\n     * @param [options] - New collection update options to set.\n     */\n    set(collection, options = {}) {\n        if (collection !== void 0 && collection !== null && !isDocumentCollection(collection)) {\n            throw new TypeError(`TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\n        }\n        if (!isObject(options)) {\n            throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n        }\n        const changed = this.#collection !== collection;\n        if (changed) {\n            this.#callbackUnregister();\n        }\n        this.#collection = collection === void 0 || collection === null ? void 0 : collection;\n        if (changed) {\n            if (isDocumentCollection(collection) && this.#subscribers.length) {\n                this.#callbackRegister();\n            }\n            this.#updateSubscribers(false, {\n                data: [],\n                ...options,\n                action: `tjs-set-${collection === void 0 || collection === null ? 'undefined' : 'new'}`\n            });\n        }\n    }\n    /**\n     * Sets options for this collection wrapper / store.\n     *\n     * @param options - Options for TJSDocumentCollection.\n     */\n    setOptions(options) {\n        if (!isObject(options)) {\n            throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\n        }\n        // Verify valid values -------------\n        if (options.delete !== void 0 && options.delete !== null && typeof options.delete !== 'function') {\n            throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function or null.`);\n        }\n        if (options.preDelete !== void 0 && options.preDelete !== null && typeof options.preDelete !== 'function') {\n            throw new TypeError(`TJSDocumentCollection error: 'preDelete' attribute in options is not a function or null.`);\n        }\n        // Set any valid values -------------\n        if (options.delete !== void 0) {\n            this.#options.delete = options.delete ?? void 0;\n        }\n        if (options.preDelete !== void 0) {\n            this.#options.preDelete = options.delete ?? void 0;\n        }\n    }\n    /**\n     * @param handler - Callback function that is invoked on update / changes.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        let addedSubscriber = false;\n        const currentIdx = this.#subscribers.findIndex((entry) => entry === handler);\n        if (currentIdx === -1) {\n            this.#subscribers.push(handler);\n            addedSubscriber = true;\n        }\n        if (addedSubscriber) {\n            // Register callback with first subscriber.\n            if (this.#subscribers.length === 1) {\n                this.#callbackRegister();\n            }\n            const collection = this.#collection;\n            const updateOptions = { action: 'tjs-subscribe', data: [] };\n            handler(collection, updateOptions); // Call handler with current value and update options.\n        }\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscribers.findIndex((sub) => sub === handler);\n            if (index !== -1) {\n                this.#subscribers.splice(index, 1);\n            }\n            // Unsubscribe from collection if there are no subscribers.\n            if (this.#subscribers.length === 0) {\n                this.#callbackUnregister();\n            }\n        };\n    }\n    /**\n     * @param force - unused - signature from Foundry render function.\n     *\n     * @param [options] - Options from render call; will have collection update context.\n     */\n    #updateSubscribers(force, options = {}) {\n        // Shallow copy w/ remapped keys.\n        const optionsRemap = {\n            action: (options.action ?? options.renderContext ?? 'tjs-unknown'),\n            data: (options.data ?? options.renderData ?? [])\n        };\n        // Coerce `data` as necessary into an array to standardize receiving processing.\n        if (!Array.isArray(optionsRemap.data)) {\n            optionsRemap.data = [optionsRemap.data];\n        }\n        this.#updateOptions = optionsRemap;\n        const subscribers = this.#subscribers;\n        const collection = this.#collection;\n        for (let cntr = 0; cntr < subscribers.length; cntr++) {\n            subscribers[cntr](collection, optionsRemap);\n        }\n    }\n}\n\nexport { TJSDocument, TJSDocumentCollection };\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"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"}