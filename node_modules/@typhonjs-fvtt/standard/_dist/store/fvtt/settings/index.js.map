{"version":3,"file":"index.js","sources":["../../../../src/store/fvtt/settings/TJSGameSettingsWithUI.js","../../../../src/store/fvtt/settings/theme/DataValidator.js","../../../../src/store/fvtt/settings/theme/TJSThemeStore.js"],"sourcesContent":["import { writable }        from '#svelte/store';\n\nimport { TJSDialog }       from '#runtime/svelte/application';\nimport { TJSSvelte }       from '#runtime/svelte/util';\nimport { TJSGameSettings } from '#runtime/svelte/store/fvtt/settings';\nimport { localize }        from '#runtime/util/i18n';\nimport { isObject }        from '#runtime/util/object';\n\nimport {\n   ripple,\n   rippleFocus }           from '#standard/action/animate/composable';\n\n/**\n * Extends {@link TJSGameSettings} with UI control for working with `TJSSettingsEdit` and `TJSSettingsSwap`\n * components. Instead of extending `TJSGameSettings` simply extend `TJSGameSettingsWithUI` instead when creating\n * reactive game settings that utilize the above components.\n */\nexport class TJSGameSettingsWithUI extends TJSGameSettings\n{\n   /** @type {import('./types').UIControl} */\n   #uiControl;\n\n   /**\n    * Creates the TJSGameSettingsWithUI instance.\n    *\n    * @param {string}   namespace - The namespace for all settings.\n    */\n   constructor(namespace)\n   {\n      super(namespace);\n\n      this.#uiControl = new UIControl(this);\n   }\n\n   /**\n    * @returns {import('./types').UIControl} The associated UIControl.\n    */\n   get uiControl()\n   {\n      return this.#uiControl;\n   }\n}\n\n/**\n * Controls preparation and processing of registered game settings w/ TJSGameSettingsUI. Game settings are parsed\n * for UI display by TJSSettingsEdit. The store `showSettings` is utilized in TJSSettingsSwap component to provide\n * an easy way to flip between settings component or any main slotted component.\n */\nclass UIControl\n{\n   /** @type {import('./types').TJSSettingsCustomSection[]} */\n   #sections = [];\n\n   /** @type {import('./').TJSGameSettings} */\n   #settings;\n\n   /** @type {boolean} */\n   #showSettings = false;\n\n   /** @type {Function} */\n   #showSettingsSet;\n\n   /** @type {{showSettings: import('svelte/store').Readable<boolean>}} */\n   #stores;\n\n   /**\n    * @param {import('./').TJSGameSettings}   settings -\n    */\n   constructor(settings)\n   {\n      this.#settings = settings;\n\n      const showSettings = writable(this.#showSettings);\n      this.#showSettingsSet = showSettings.set;\n\n      this.#stores = {\n         showSettings: { subscribe: showSettings.subscribe }\n      };\n\n      Object.freeze(this.#stores);\n   }\n\n   /**\n    * @returns {boolean} Current `showSettings` state.\n    */\n   get showSettings()\n   {\n      return this.#showSettings;\n   }\n\n   /**\n    * @returns {{ showSettings: import('svelte/store').Readable<boolean> }} Returns the managed stores.\n    */\n   get stores()\n   {\n      return this.#stores;\n   }\n\n   /**\n    * Sets current `showSettings` state.\n    *\n    * @param {boolean}  showSettings - New `showSettings` state.\n    */\n   set showSettings(showSettings)\n   {\n      this.#showSettings = showSettings;\n      this.#showSettingsSet(this.#showSettings);\n   }\n\n   /**\n    * Adds a custom section / folder defined by the provided TJSSettingsCustomSection options object.\n    *\n    * @param {import('./types').TJSSettingsCustomSection} options - The configuration object for the custom section.\n    */\n   addSection(options)\n   {\n      if (!isObject(options)) { throw new TypeError(`'options' is not an object.`); }\n\n      if (!TJSSvelte.util.isComponent(options.class))\n      {\n         throw new TypeError(`'options.class' is not a Svelte component.`);\n      }\n\n      if (options.props !== void 0 && !isObject(options.props))\n      {\n         throw new TypeError(`'options.props' is not an object.`);\n      }\n\n      if (options.folder !== void 0)\n      {\n         const folder = options.folder;\n\n         if (typeof folder !== 'string' && !isObject(folder))\n         {\n            throw new TypeError(`'options.folder' is not a string or object.`);\n         }\n\n         if (isObject(folder))\n         {\n            if (typeof folder.label !== 'string') { throw new TypeError(`'options.folder.label' is not a string.`); }\n\n            // Validate custom component set as folder summary end.\n            if (folder.summaryEnd !== void 0)\n            {\n               if (!isObject(folder.summaryEnd))\n               {\n                  throw new TypeError(`'options.folder.summaryEnd' is not an object.`);\n               }\n\n               if (!TJSSvelte.util.isComponent(folder.summaryEnd.class))\n               {\n                  throw new TypeError(`'options.folder.summaryEnd.class' is not a Svelte component.`);\n               }\n\n               if (folder.summaryEnd.props !== void 0 && !isObject(folder.summaryEnd.props))\n               {\n                  throw new TypeError(`'options.folder.summaryEnd.props' is not an object.`);\n               }\n            }\n\n            // Validate that folder inline styles is an object.\n            if (folder.styles !== void 0 && !isObject(folder.styles))\n            {\n               throw new TypeError(`'options.folder.styles' is not an object.`);\n            }\n         }\n      }\n\n      // Validate that section inline styles is an object.\n      if (options.styles !== void 0 && !isObject(options.styles))\n      {\n         throw new TypeError(`'options.styles' is not an object.`);\n      }\n\n      this.#sections.push(options);\n   }\n\n   /**\n    * Creates the UISettingsData object by parsing stored settings in\n    *\n    * @param {import('./types').TJSSettingsCreateOptions} [options] - Optional parameters.\n    *\n    * @returns {import('./types').TJSSettingsUIData} Parsed UI settings data.\n    */\n   create(options)\n   {\n      const settings = this.#parseSettings(options);\n      const destroy = () => this.#destroy(settings);\n\n      return {\n         ...settings,\n         destroy\n      };\n   }\n\n   /**\n    * Destroy callback. Checks for any `requiresReload` parameter in each setting comparing against initial value\n    * when `settings` is created and current value. If there is a difference then show a modal dialog asking the user\n    * if they want to reload for those settings to take effect.\n    *\n    * @param {import('./types').TJSSettingsUIData}   settings - The UI data object initiated w/ `create`.\n    */\n   #destroy(settings)\n   {\n      let requiresClientReload = false;\n      let requiresWorldReload = false;\n\n      if (Array.isArray(settings.topLevel))\n      {\n         for (const setting of settings.topLevel)\n         {\n            const current = globalThis.game.settings.get(setting.namespace, setting.key);\n            if (current === setting.initialValue) { continue; }\n\n            requiresClientReload ||= (setting.scope === 'client') && setting.requiresReload;\n            requiresWorldReload ||= (setting.scope === 'world') && setting.requiresReload;\n         }\n      }\n\n      if (Array.isArray(settings.folders))\n      {\n         for (const folder of settings.folders)\n         {\n            if (Array.isArray(folder.settings))\n            {\n               for (const setting of folder.settings)\n               {\n                  const current = globalThis.game.settings.get(setting.namespace, setting.key);\n                  if (current === setting.initialValue) { continue; }\n\n                  requiresClientReload ||= (setting.scope === 'client') && setting.requiresReload;\n                  requiresWorldReload ||= (setting.scope === 'world') && setting.requiresReload;\n               }\n            }\n         }\n      }\n\n      if (requiresClientReload || requiresWorldReload) { this.#reloadConfirm({ world: requiresWorldReload }); }\n\n      this.#showSettings = false;\n      this.#showSettingsSet(this.#showSettings);\n   }\n\n   /**\n    * @param {import('./types').TJSSettingsCreateOptions} [options] - Optional parameters.\n    *\n    * @returns {import('./types').TJSSettingsUIData} Parsed UI settings data.\n    */\n   #parseSettings({ efx = 'ripple', storage } = {})\n   {\n      const namespace = this.#settings.namespace;\n\n      if (storage && typeof namespace !== 'string')\n      {\n         console.warn(\n          `TJSGameSettings warning: 'options.storage' defined, but 'namespace' not defined in TJSGameSettings.`);\n      }\n\n      const hasStorage = storage && typeof namespace === 'string';\n\n      const uiSettings = [];\n\n      const canConfigure = globalThis.game.user.can('SETTINGS_MODIFY');\n\n      for (const setting of this.#settings.data())\n      {\n         if (!setting.config || (!canConfigure && (setting.scope !== 'client'))) { continue; }\n\n         let options;\n\n         if (isObject(setting.choices))\n         {\n            options = Object.entries(setting.choices).map((entry) => ({ value: entry[0], label: localize(entry[1]) }));\n         }\n\n         let range;\n         if (isObject(setting.range))\n         {\n            range = {};\n\n            // TODO Better error messages.\n            // Verify range data.\n            if (typeof setting.range.min !== 'number') { throw new TypeError(`Setting 'range.min' is not a number.`); }\n            if (typeof setting.range.max !== 'number') { throw new TypeError(`Setting 'range.max' is not a number.`); }\n            if (setting.range.step !== void 0 && typeof setting.range.step !== 'number')\n            {\n               throw new TypeError(`Setting 'range.step' is not a number.`);\n            }\n\n            range.min = setting.range.min;\n            range.max = setting.range.max;\n            range.step = setting.range.step ? setting.range.step : 1;\n         }\n\n         // Default to `String` if no type is provided.\n         const type = setting.type instanceof Function ? setting.type.name : 'String';\n\n         // Only configure file picker if setting type is a string.\n         let filePicker;\n         if (type === 'String')\n         {\n            filePicker = setting.filePicker === true ? 'any' : setting.filePicker;\n         }\n\n         let buttonData;\n         if (filePicker)\n         {\n            buttonData = {\n               icon: 'fas fa-file-import fa-fw',\n               efx: efx === 'ripple' ? ripple() : void 0,\n               title: 'FILES.BrowseTooltip',\n               styles: { 'margin-left': '0.25em' }\n            };\n         }\n\n         const store = this.#settings.getStore(setting.key);\n\n         let selectData;\n\n         /** @type {string} */\n         let componentType = 'text';\n\n         if (setting.type === Boolean)\n         {\n            componentType = 'checkbox';\n         }\n         else if (options !== void 0)\n         {\n            componentType = 'select';\n\n            selectData = {\n               store,\n               efx: efx === 'ripple' ? rippleFocus() : void 0,\n               type: componentType,\n               options\n            };\n         }\n         else if (setting.type === Number)\n         {\n            componentType = isObject(setting.range) ? 'range' : 'number';\n         }\n\n         let inputData;\n         if (componentType === 'text' || componentType === 'number')\n         {\n            inputData = {\n               store,\n               efx: efx === 'ripple' ? rippleFocus() : void 0,\n               type: componentType\n            };\n         }\n\n         uiSettings.push({\n            id: `${setting.namespace}.${setting.key}`,\n            namespace: setting.namespace,\n            folder: setting.folder,\n            key: setting.key,\n            name: localize(setting.name),\n            hint: localize(setting.hint),\n            type,\n            componentType,\n            filePicker,\n            range,\n            store,\n            initialValue: globalThis.game.settings.get(setting.namespace, setting.key),\n            scope: setting.scope,\n            requiresReload: typeof setting.requiresReload === 'boolean' ? setting.requiresReload : false,\n            buttonData,\n            inputData,\n            selectData\n         });\n      }\n\n      // If storage is available then create a key otherwise create a dummy store, so `applyScrolltop` works.\n      const storeScrollbar = hasStorage ? storage.getStore(`${namespace}-settings-scrollbar`) : writable(0);\n\n      const topLevel = [];\n\n      const folderData = {};\n\n      // Sort into folders\n      for (const setting of uiSettings)\n      {\n         if (typeof setting.folder === 'string')\n         {\n            const folderName = localize(setting.folder);\n\n            // Create folder array if one doesn't exist already.\n            if (!Array.isArray(folderData[folderName])) { folderData[folderName] = []; }\n            folderData[folderName].push(setting);\n         }\n         else // Add to 'toplevel' settings\n         {\n            topLevel.push(setting);\n         }\n      }\n\n      // Convert folderData object to array.\n      const folders = Object.entries(folderData).map((entry) =>\n      {\n         return {\n            label: entry[0],\n            store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${entry[0]}`) : void 0,\n            settings: entry[1],\n         };\n      });\n\n      const sections = [];\n\n      // Parse custom component sections\n      for (const section of this.#sections)\n      {\n         const parsedSection = {\n            class: section.class,\n            props: section.props,\n            styles: section.styles\n         };\n\n         if (typeof section.folder === 'string')\n         {\n            const label = localize(section.folder);\n\n            parsedSection.folder = {\n               label,\n               store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${label}`) : void 0\n            };\n         }\n         else if (isObject(section.folder))\n         {\n            const label = localize(section.folder.label);\n\n            parsedSection.folder = {\n               label,\n               store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${label}`) : void 0,\n               summaryEnd: section.folder.summaryEnd,\n               styles: section.folder.styles\n            };\n         }\n\n         sections.push(parsedSection);\n      }\n\n      return {\n         storeScrollbar,\n         topLevel,\n         folders,\n         sections\n      };\n   }\n\n   async #reloadConfirm({ world = false } = {})\n   {\n      let title = localize('SETTINGS.ReloadPromptTitle');\n      let label = localize('SETTINGS.ReloadPromptBody');\n\n      // Foundry v9 doesn't have the reload lang keys, so substitute just for English translation.\n      // TODO: FOUNDRY_V9 - remove when support for v9 is dropped.\n      title = title !== 'SETTINGS.ReloadPromptTitle' ? title : 'Reload Application?';\n      label = label !== 'SETTINGS.ReloadPromptBody' ? label :\n       'Some of the changed settings require a reload of the application to take effect. Would you like to reload now?';\n\n      const reload = await TJSDialog.confirm({\n         modal: true,\n         draggable: false,\n         title,\n         content: `<p>${label}</p>`\n      });\n\n      if (!reload) { return; }\n\n      // Reload all connected clients. Note: Foundry v9 might not support this event.\n      if (world && globalThis.game.user.isGM) { globalThis.game.socket.emit('reload'); }\n\n      // Reload locally.\n      window.location.reload();\n   }\n\n   /**\n    * Convenience method to swap `showSettings`.\n    *\n    * @returns {boolean} New `showSettings` state.\n    */\n   swapShowSettings()\n   {\n      this.#showSettings = !this.#showSettings;\n      this.#showSettingsSet(this.#showSettings);\n      return this.#showSettings;\n   }\n}\n","import { getFormat } from '#runtime/data/color/colord';\nimport { isObject }  from '#runtime/util/object';\n\nexport class DataValidator\n{\n   /**\n    * This regex tests for correct CSS variable names according to the CSS specification.\n    *\n    * @type {RegExp}\n    *\n    * @see https://www.w3.org/TR/css-variables-1/#defining-variables\n    * @see https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n    */\n   static #REGEX_CSS_VAR_NAME =\n    /--(?:[_a-zA-Z\\u00A0-\\uFFFF]|\\\\[0-9a-fA-F]{1,6})(?:[\\w\\u00A0-\\uFFFF-]|\\\\[0-9a-fA-F]{1,6})*/;\n\n   static #SET_TYPES = new Set(['color']);\n\n   /**\n    * Parses and verifies a component entry.\n    *\n    * @param {import('./TJSThemeStore').TJSThemeStoreComponent} entry - A component entry.\n    *\n    * @param {number}   cntr - Current component entry counter.\n    *\n    * @returns {object} Parsed and verified component entry.\n    */\n   static componentEntry(entry, cntr)\n   {\n      const result = Object.assign({}, entry);\n\n      if (!isObject(entry))\n      {\n         throw new TypeError(`TJSThemeStore initialize error: data[${cntr}] entry is not an object.`);\n      }\n\n      if (typeof entry.label !== 'string')\n      {\n         throw new Error(\n          `TJSThemeStore initialize error: data[${cntr}] 'entry.label' is not a string.`);\n      }\n\n      if (typeof entry.type !== 'string')\n      {\n         throw new Error(\n          `TJSThemeStore initialize error: data[${cntr}] 'entry.type' is not a string.`);\n      }\n\n      if (!this.#SET_TYPES.has(entry.type))\n      {\n         throw new Error(`TJSThemeStore initialize error: data[${cntr}] 'entry.type' unknown.`);\n      }\n\n      if (entry.var !== void 0 && typeof entry.var !== 'string')\n      {\n         throw new TypeError(`TJSThemeStore initialize error: data[${cntr}] 'entry.var' is not a string.`);\n      }\n\n      // Handle common data for CSS variable entries.\n      if (typeof entry.var === 'string')\n      {\n         // Test for valid CSS variable name\n         if (!this.#REGEX_CSS_VAR_NAME.test(entry.var))\n         {\n            throw new Error(\n             `TJSThemeStore initialize error: data[${cntr}] 'entry.var' is not a valid CSS variable name.`);\n         }\n\n         if (typeof entry.default !== 'string')\n         {\n            throw new TypeError(`TJSThemeStore initialize error: data[${cntr}] 'entry.default' is not a string.`);\n         }\n      }\n\n      switch (entry.type)\n      {\n         case 'color':\n         {\n            // Verify that default value is a supported color format.\n            const format = getFormat(entry.default);\n            if (!format)\n            {\n               throw new Error(`TJSThemeStore initialize error: data[${cntr}] 'entry.default' unknown color format.`);\n            }\n\n            // Add the color format to entry result data.\n            result.format = format;\n            break;\n         }\n      }\n\n      return result;\n   }\n}\n\n/**\n * A utility class to work with semantic versioning.\n */\nexport class SemVer\n{\n   /**\n    * Regular expression to parse a semantic version string capturing: major, minor, patch, prerelease, and build\n    * metadata segments.\n    *\n    * @type {RegExp}\n    */\n   static #REGEX_SEMVER = /^(\\d+)\\.(\\d+)\\.(\\d+)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?$/;\n\n   /**\n    * Parses a semantic version string and returns a semantic version data object.\n    *\n    * @param {string}   semver - The semantic version string to parse.\n    *\n    * @param {object}   [options] - Optional parameters\n    *\n    * @param {boolean}  [options.exceptions=false] - Throw exception on parse failure.\n    *\n    * @returns {SemVerData} The parsed semantic version object.\n    * @throws {Error} If the input string is not a valid semantic version string.\n    */\n   static parseSemVer(semver, { exceptions = false } = {})\n   {\n      if (typeof semver !== 'string') { throw new TypeError(`'semver' is not a string.`); }\n\n      const matches = semver.match(this.#REGEX_SEMVER);\n\n      if (!matches)\n      {\n         if (exceptions)\n         {\n            throw new Error(`Invalid semantic versioning string: '${semver}'`);\n         }\n         else\n         {\n            return void 0;\n         }\n      }\n\n      return {\n         major: typeof matches?.[1] === 'string' !== void 0 ? parseInt(matches[1], 10) : 0,\n         minor: typeof matches?.[2] === 'string' ? parseInt(matches[2], 10) : 0,\n         patch: typeof matches?.[3] === 'string' ? parseInt(matches[3], 10) : 0,\n         prerelease: typeof matches?.[4] === 'string' ? matches[4] : '',\n         build: typeof matches?.[5] === 'string' ? matches[5] : ''\n      };\n   }\n\n   /**\n    * Compares two semantic version strings and returns a comparison result.\n    *\n    * @param {string} a - The first semantic version string.\n    *\n    * @param {string} b - The second semantic version string.\n    *\n    * @returns {number} 1 if a is greater than b, -1 if a is less than b, and 0 if a and b are equal.\n    */\n   static compareSemVerString(a, b)\n   {\n      return this.compareSemVerData(this.parseSemVer(a, { exceptions: true }),\n       this.parseSemVer(b, { exceptions: true }));\n   }\n\n   /**\n    * Compares two parsed semantic version objects and returns a comparison result.\n    *\n    * @param {SemVerData} a - The first parsed semantic version object.\n    *\n    * @param {SemVerData} b - The second parsed semantic version object.\n    *\n    * @returns {number} 1 if a is greater than b, -1 if a is less than b, and 0 if a and b are equal.\n    */\n   static compareSemVerData(a, b)\n   {\n      const majorA = a.major;\n      const majorB = b.major;\n      const minorA = a.minor;\n      const minorB = b.minor;\n      const patchA = a.patch;\n      const patchB = b.patch;\n\n      if (majorA > majorB) { return 1; }\n      if (majorA < majorB) { return -1; }\n\n      if (minorA > minorB) { return 1; }\n      if (minorA < minorB) { return -1; }\n\n      if (patchA > patchB) { return 1; }\n      if (patchA < patchB) { return -1; }\n\n      const prereleaseA = a.prerelease ?? '';\n      const prereleaseB = b.prerelease ?? '';\n\n      if (prereleaseA && !prereleaseB) { return -1; }\n      if (!prereleaseA && prereleaseB) { return 1; }\n\n      if (prereleaseA && prereleaseB)\n      {\n         const partsA = prereleaseA.split('.');\n         const partsB = prereleaseB.split('.');\n         const len = Math.min(partsA.length, partsB.length);\n\n         for (let i = 0; i < len; i++)\n         {\n            const partA = parseInt(partsA[i], 10);\n            const partB = parseInt(partsB[i], 10);\n\n            if (!isNaN(partA) && isNaN(partB)) { return -1; }\n            if (isNaN(partA) && !isNaN(partB)) { return 1; }\n\n            if (partA > partB) { return 1; }\n            if (partA < partB) { return -1; }\n\n            if (isNaN(partA) && isNaN(partB))\n            {\n               if (partsA[i] > partsB[i]) { return 1; }\n               if (partsA[i] < partsB[i]) { return -1; }\n            }\n         }\n\n         if (partsA.length > partsB.length) { return 1; }\n         if (partsA.length < partsB.length) { return -1; }\n      }\n\n      return 0;\n   }\n}\n\n/**\n * @typedef {object} SemVerData\n *\n * @property {number} major The major version number as a string.\n *\n * @property {number} minor The minor version number as a string.\n *\n * @property {number} patch The patch version number as a string.\n *\n * @property {string} prerelease The prerelease version identifier as a string, or an empty string if not present.\n *\n * @property {string} build The build metadata identifier as a string, or an empty string if not present.\n */\n","import { writable }        from '#svelte/store';\n\nimport { getFormat }       from '#runtime/data/color/colord';\nimport { TJSGameSettings } from '#runtime/svelte/store/fvtt/settings';\nimport { propertyStore }   from '#runtime/svelte/store/writable-derived';\nimport { TJSStyleManager } from '#runtime/util/dom/style';\n\nimport {\n   isIterable,\n   isObject }              from '#runtime/util/object';\n\nimport {\n   DataValidator,\n   SemVer }                from './DataValidator.js';\n\n/**\n * Must be constructed from a TJSGameSettings instance `init` / initialize method called from the `ready` Foundry VTT\n * hook.\n */\nexport class TJSThemeStore\n{\n   /** @type {object[]} */\n   #components;\n\n   /** @type {{}} */\n   #data = {};\n\n   #defaultThemeData;\n\n   #initialThemeData;\n\n   #settingsStoreHandler;\n\n   /**\n    * @type { {[key: string]: import('svelte/store').Writable<string|null>} }\n    */\n   #stores = {};\n\n   /**\n    * @type {TJSStyleManager}\n    */\n   #styleManager;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<{ [key: string]: object }>[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * Stores all CSS variable keys.\n    *\n    * @type {string[]}\n    */\n   #vars;\n\n   /**\n    * @type {import('./DataValidator').SemVerData}\n    */\n   #version;\n\n   /**\n    * @param {TJSThemeStoreOptions} options - Options\n    */\n   constructor(options)\n   {\n      if (!isObject(options)) { throw new TypeError(`'options' is not an object.`); }\n\n      if (typeof options.namespace !== 'string') { throw new TypeError(`'namespace' attribute is not a string.`); }\n\n      if (typeof options.key !== 'string') { throw new TypeError(`'key' attribute is not a string.`); }\n\n      if (!(options.gameSettings instanceof TJSGameSettings))\n      {\n         throw new TypeError(`'gameSettings' attribute is not an instance of TJSGameSettings.`);\n      }\n\n      if (!(options.styleManager instanceof TJSStyleManager))\n      {\n         throw new TypeError(`'styleManager' attribute is not an instance of TJSStyleManager.`);\n      }\n\n      if (!isObject(options.config)) { throw new TypeError(`'config' attribute is not an object. `); }\n\n      if (typeof options.config.version !== 'string')\n      {\n         throw new TypeError(`'config.version' attribute is not a string`);\n      }\n\n      this.#version = SemVer.parseSemVer(options.config.version);\n\n      if (!isObject(this.#version))\n      {\n         throw new Error(`'config.version' attribute is not a valid semantic version string.`);\n      }\n\n      if (!isIterable(options.config.components))\n      {\n         throw new TypeError(`'config.components' attribute is not an iterable list. `);\n      }\n\n      this.#styleManager = options.styleManager;\n\n      this.#initialize(options);\n   }\n\n   /**\n    * @returns { {[key: string]: import('svelte/store').Writable<string|null>} } All stores.\n    */\n   get stores()\n   {\n      return this.#stores;\n   }\n\n   /**\n    * Parse `options.config` and initialize game setting for theme data.\n    *\n    * @param {TJSThemeStoreOptions}   options -\n    */\n   #initialize(options)\n   {\n      this.#components = [];\n      this.#vars = [];\n\n      this.#defaultThemeData = {};\n      this.#initialThemeData = Object.assign({}, this.#defaultThemeData);\n\n      let cntr = 0;\n\n      // Process component / vars data.\n      for (let entry of options.config.components)\n      {\n         // Validate entry, but also adds additional information based on data types; IE `format` for `color`.\n         entry = DataValidator.componentEntry(entry, cntr);\n\n         // Add var key if defined.\n         if (typeof entry.var === 'string')\n         {\n            const key = entry.var;\n\n            this.#vars.push(key);\n            this.#stores[key] = propertyStore(this, key);\n            this.#components.push(Object.assign({}, entry, { store: this.#stores[key] }));\n            this.#defaultThemeData[key] = entry.default;\n         }\n         else\n         {\n            this.#components.push(Object.assign({}, entry));\n         }\n\n         cntr++;\n      }\n\n      // Create a store for TJSThemeEditor of all component data / definitions.\n      this.#stores.components = writable(this.#components);\n\n      // Set initial data to default here just in case the game setting entry is invalid upon registration / IE null.\n      this.#initialThemeData = Object.assign({}, this.#defaultThemeData);\n\n      this.#settingsStoreHandler = options.gameSettings.register({\n         namespace: options.namespace,\n         key: options.key,\n         store: this,\n         options: {\n            scope: 'world',\n            config: false,\n            default: Object.assign({}, this.#defaultThemeData),\n            type: Object\n         }\n      });\n\n      // Retrieve existing data from stored word setting.\n      this.#initialThemeData = game.settings.get(options.namespace, options.key);\n\n      // Validate initial theme data and set to default if it fails to validate.\n      if (!this.#validateThemeData(this.#initialThemeData, false))\n      {\n         console.warn(\n          `TJSThemeStore warning: Initial theme data invalid. Setting to default data.`);\n\n         this.#initialThemeData = Object.assign({}, this.#defaultThemeData);\n\n         this.set(Object.assign({}, this.#initialThemeData));\n      }\n   }\n\n   /**\n    * Sets the theme store with new data.\n    *\n    * @param {object}   themeData -\n    *\n    * @returns {TJSThemeStore} This theme store instance.\n    */\n   set(themeData)\n   {\n      if (!this.#validateThemeData(themeData))\n      {\n         themeData = Object.assign({}, this.#initialThemeData);\n      }\n\n      for (const key of this.#vars)\n      {\n         if (key in themeData)\n         {\n            const keyData = themeData[key];\n\n            this.#data[key] = keyData;\n            this.#styleManager.setProperty(key, keyData);\n         }\n      }\n\n      this.#updateSubscribers();\n\n      return this;\n   }\n\n   /**\n    * Validates the given theme data object ensuring that all parameters are found and are correct HSVA values.\n    *\n    * @param {object}   themeData -\n    *\n    * @param {boolean}  warn - When true post warning message.\n    *\n    * @returns {boolean} Validation status.\n    */\n   #validateThemeData(themeData, warn = true)\n   {\n      if (!isObject(themeData))\n      {\n         if (warn)\n         {\n            console.warn(`TJSThemeStore warning: 'theme' data is not an object resetting to initial data.`);\n         }\n\n         return false;\n      }\n\n      for (const key of this.#vars)\n      {\n         const data = themeData[key];\n\n         if (getFormat(data) !== 'hsl')\n         {\n            if (warn)\n            {\n               console.warn(`TJSThemeStore warning: data for property '${\n                key}' is not a HSL color string. Resetting to initial data.`);\n            }\n\n            return false;\n         }\n      }\n\n      return true;\n   }\n\n   // ------------\n\n   /**\n    * Updates all subscribers\n    */\n   #updateSubscribers()\n   {\n      const data = Object.assign({}, this.#data);\n\n      // Early out if there are no subscribers.\n      if (this.#subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](data); }\n      }\n   }\n\n   /**\n    * @param {import('svelte/store').Subscriber<{ [key: string]: object }>} handler - Callback function that is invoked on\n    * update / changes. Receives copy of the theme data.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(Object.assign({}, this.#data));                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\n/**\n * @typedef {object} TJSThemeStoreConfig\n *\n * @property {string} version A semantic version string.\n *\n * @property {Iterable<TJSThemeStoreComponent>} components An iterable list of theme store component data.\n */\n\n/**\n * @typedef {object} TJSThemeStoreComponent\n *\n * @property {string} type Type of component / variable.\n *\n * @property {string} [default] An optional default value for a CSS variable.\n *\n * @property {string} [label] An optional label for any variable / setting related component.\n *\n * @property {string} [var] A CSS variable name.\n */\n\n/**\n * @typedef {object} TJSThemeStoreOptions\n *\n * @property {string} namespace The world setting namespace.\n *\n * @property {string} key The world setting key.\n *\n * @property {TJSGameSettings} gameSettings An associated TJSGameSettings instance.\n *\n * @property {TJSStyleManager} styleManager An associated TJSStyleManager instance to manipulate CSS variables.\n *\n * @property {TJSThemeStoreConfig} config Data defining CSS theme store components and variables.\n */\n"],"names":[],"mappings":"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"}