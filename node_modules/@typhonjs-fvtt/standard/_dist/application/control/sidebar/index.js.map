{"version":3,"file":"index.js","sources":["../../../../src/application/control/sidebar/FVTTSidebarControl.js"],"sourcesContent":["import { SvelteApp }       from '#runtime/svelte/application';\n\nimport { TJSSvelte }       from '#runtime/svelte/util';\nimport { ManagedPromise }  from '#runtime/util/async';\nimport { StyleParse }      from '#runtime/util/dom/style';\n\nimport {\n   hasPrototype,\n   isObject }              from '#runtime/util/object';\n\nimport {\n   FVTTSidebarPopout,\n   FVTTSidebarTab,\n   FVTTSidebarWrapper }    from '#standard/component/fvtt-internal';\n\n/**\n * Provides the ability to mount and control Svelte component based sidebar panels & tabs in the Foundry sidebar.\n *\n * The nice aspect about FVTTSidebarControl is that all you have to provide is the sidebar component and the rest is\n * handled for you including automatically widening the width of the sidebar to fit the new sidebar tab. Also by default\n * an adhoc SvelteApp is configured to display the sidebar when popped out automatically without the need to\n * associate an app instance.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * To add a new sidebar tab schedule one or more invocations of {@link FVTTSidebarControl.add} in a `setup` hook. You\n * must add all sidebars in the `setup` hook before the main Foundry sidebar renders. Please review all the expanded\n * options available in the configuration object passed to the `add` method. At minimum, you need to provide a unique\n * `id`, `icon`, and `svelte` configuration object. You almost always will want to provide `beforeId` referencing\n * another existing sidebar tab ID to place the tab button before. If undefined the tab is inserted at the end of\n * the sidebar tabs. The default Foundry sidebar tab IDs from left to right are: 'chat', 'combat', 'scenes', 'actors',\n * 'items', 'journal', 'tables', 'cards', 'playlists', 'compendium', and 'settings'.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * Optionally:\n * - You can define the `icon` as a Svelte configuration object to load an interactive component instead of\n * using a FontAwesome icon. This allows you to dynamically show state similar to the chat log sidebar when activity\n * occurs or for other purposes.\n *\n * - You can provide `popoutOptions` overriding the default options passed to the default adhoc SvelteApp\n * rendered for the popout.\n *\n * - You can provide a class that extends from SvelteApp as `popoutApplication` to provide a fully customized\n * popout sidebar that you fully control.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * There is a method to remove an existing stock Foundry sidebar {@link FVTTSidebarControl.remove}. It takes\n * an `id` field that must be one of the existing Foundry sidebar IDs to remove: chat', 'combat', 'scenes',\n * 'actors', 'items', 'journal', 'tables', 'cards', 'playlists', 'compendium', and 'settings'.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * There is a method to replace an existing stock Foundry sidebar {@link FVTTSidebarControl.replace}. It takes\n * the same data as the `add` method, but `id` must be one of the existing Foundry sidebar IDs to replace: chat',\n * 'combat', 'scenes', 'actors', 'items', 'journal', 'tables', 'cards', 'playlists', 'compendium', and 'settings'.\n *\n * Both the `add` and `replace` methods have a data field `mergeAppImpl` that provides the base implementation for the\n * added / replaced object instance assigned to `globalThis.ui.<SIDEBAR APP ID>`. When replacing Foundry core sidebar\n * panels like the {@link CombatTracker} there is additional API that you must handle found in the given core\n * sidebar app implementation. It is recommended that you implement this API as part of the control / model code passed\n * to the Svelte sidebar component and also set to `mergeAppImpl`.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * The {@link FVTTSidebarControl.get} method allows you to retrieve the associated {@link FVTTSidebarEntry} for a given\n * sidebar by ID allowing access to the configuration data, popout app, and wrapper components that mount the sidebar.\n *\n * The {@link FVTTSidebarControl.wait} returns a Promise that is resolved after all sidebars have been initialized.\n * allowing handling any special setup as necessary.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * @example Minimal setup\n *\n * Hooks.once('setup', () =>\n * {\n *    FVTTSidebarControl.add({\n *       beforeId: 'items',               // Place new tab before the 'items' tab.\n *       id: 'test',                      // A unique CSS ID.\n *       icon: 'fas fa-dice-d10',         // FontAwesome icon.\n *       condition: () => game.user.isGM, // Optional boolean / function to conditionally run the sidebar action.\n *       title: 'Test Directory',         // Title of popout sidebar app; can be language string.\n *       tooltip: 'Tests',                // Tooltip for sidebar tab.\n *       svelte: {                        // A Svelte configuration object.\n *          class: TestTab                // A Svelte component.\n *       }\n *    });\n * });\n */\nexport class FVTTSidebarControl\n{\n   /**\n    * @type {object[]}\n    */\n   static #initData = [];\n\n   static #initPromise = new ManagedPromise();\n\n   /**\n    * @type {Map<string, FVTTSidebarEntry>}\n    */\n   static #sidebars = new Map();\n\n   /**\n    * Adds a new Svelte powered sidebar tab / panel.\n    *\n    * @param {FVTTSidebarAddData}   sidebarData - The configuration object for a Svelte sidebar,\n    */\n   static add(sidebarData)\n   {\n      try\n      {\n         if (!isObject(sidebarData))\n         {\n            throw new TypeError(`FVTTSidebarControl.add error: 'sidebarData' is not an object.`);\n         }\n\n         if (typeof sidebarData.id !== 'string')\n         {\n            throw new TypeError(`FVTTSidebarControl.add error: 'sidebarData.id' is not a string.`);\n         }\n\n         if (typeof sidebarData.icon !== 'string' && !isObject(sidebarData.icon))\n         {\n            throw new TypeError(`FVTTSidebarControl.add error: 'sidebarData.icon' is not a string or object.`);\n         }\n\n         if (sidebarData.beforeId !== void 0 && typeof sidebarData.beforeId !== 'string')\n         {\n            throw new TypeError(`FVTTSidebarControl.add error: 'sidebarData.beforeId' is not a string.`);\n         }\n\n         if (sidebarData.condition !== void 0 && typeof sidebarData.condition !== 'boolean' &&\n          typeof sidebarData.condition !== 'function')\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData.condition' is not a boolean or function.`);\n         }\n\n         if (sidebarData.mergeAppImpl !== void 0 && !isObject(sidebarData.mergeAppImpl))\n         {\n            throw new TypeError(`FVTTSidebarControl.add error: 'sidebarData.mergeAppImpl' is not an object.`);\n         }\n\n         if (sidebarData.popoutApplication !== void 0 && !hasPrototype(sidebarData.popoutApplication, SvelteApp))\n         {\n            throw new TypeError(\n             `FVTTSidebarControl.add error: 'sidebarData.popoutApplication' is not a SvelteApp.`);\n         }\n\n         if (sidebarData.popoutOptions !== void 0 && !isObject(sidebarData.popoutOptions))\n         {\n            throw new TypeError(`FVTTSidebarControl.add error: 'sidebarData.popoutOptions' is not an object.`);\n         }\n\n         if (sidebarData.title !== void 0 && typeof sidebarData.title !== 'string')\n         {\n            throw new TypeError(`FVTTSidebarControl.add error: 'sidebarData.title' is not a string.`);\n         }\n\n         if (sidebarData.tooltip !== void 0 && typeof sidebarData.tooltip !== 'string')\n         {\n            throw new TypeError(`FVTTSidebarControl.add error: 'sidebarData.tooltip' is not a string.`);\n         }\n\n         let svelteConfig;\n\n         try\n         {\n            svelteConfig = TJSSvelte.config.parseConfig(sidebarData.svelte);\n         }\n         catch (err)\n         {\n            throw new TypeError(`FVTTSidebarControl.add error parsing 'sidebarData.svelte'; ${err.message}`);\n         }\n\n         // Parse any icon defined as a Svelte configuration object.\n\n         let iconSvelteConfig;\n\n         if (isObject(sidebarData.icon))\n         {\n            try\n            {\n               iconSvelteConfig = TJSSvelte.config.parseConfig(sidebarData.icon);\n            }\n            catch (err)\n            {\n               throw new TypeError(`FVTTSidebarControl.add error parsing 'sidebarData.icon'; ${err.message}`);\n            }\n         }\n\n         if (this.#initData.length === 0)\n         {\n            this.#initPromise.create();\n\n            Hooks.once('renderSidebar', () => this.#initialize());\n         }\n\n         const sidebar = {\n            ...sidebarData,\n            svelteConfig,\n            iconSvelteConfig,\n            action: 'add'\n         };\n\n         // Defines the default options to use when `popoutApplication` is not defined.\n         sidebar.popoutOptions = {\n            // Default SvelteApp options.\n            id: `${sidebarData.id}-popout`,\n            title: sidebarData.title ?? sidebarData.tooltip,\n            classes: ['tab', 'sidebar-tab', 'sidebar-popout'],\n            height: 'auto',\n            width: 300,\n            svelte: {\n               class: FVTTSidebarPopout,\n               target: document.body,\n               props: {\n                  sidebarData: sidebar\n               }\n            },\n\n            // Allow overriding of SvelteApp options.\n            ...(sidebarData.popoutOptions ?? {})\n         };\n\n         this.#initData.push(sidebar);\n      }\n      catch (err)\n      {\n         console.error(err);\n      }\n   }\n\n   /**\n    * Initializes all sidebars registered after the initial Foundry Sidebar app has been rendered.\n    */\n   static #initialize()\n   {\n      // Retrieve Foundry sidebar and sidebar tabs elements.\n      const sidebarEl = document.querySelector('#sidebar');\n      const tabsEl = document.querySelector('#sidebar-tabs');\n\n      if (!(sidebarEl instanceof HTMLElement))\n      {\n         throw new TypeError(\n          `FVTTSidebarControl.#initialize error - Could not locate sidebar with '#sidebar' selector.`);\n      }\n\n      if (!(tabsEl instanceof HTMLElement))\n      {\n         throw new TypeError(\n          `FVTTSidebarControl.#initialize error - Could not locate sidebar tabs with '#sidebar-tabs' selector.`);\n      }\n\n      /**\n       * Stores data used for adding / replacing sidebars.\n       *\n       * @type {{tabsEl: HTMLElement, sidebarEl: HTMLElement, initialSidebarWidth: number, addedSidebarWidth: number}}\n       */\n      const data = {\n         sidebarEl,\n         tabsEl,\n         initialSidebarWidth: StyleParse.pixels(globalThis?.getComputedStyle(sidebarEl)?.width),\n         addedSidebarWidth: 0\n      };\n\n      for (const sidebarData of this.#initData)\n      {\n         // Handle optional `condition` field potentially skipping the current sidebar action.\n         if (sidebarData.condition !== void 0)\n         {\n            if (typeof sidebarData.condition === 'boolean' && !sidebarData.condition) { continue; }\n            else if (typeof sidebarData.condition === 'function' && !sidebarData.condition()) { continue; }\n         }\n\n         try\n         {\n            switch (sidebarData.action)\n            {\n               case 'add':\n                  this.#sidebarAdd(data, sidebarData);\n                  break;\n\n               case 'remove':\n                  this.#sidebarRemove(data, sidebarData);\n                  break;\n\n               case 'replace':\n                  this.#sidebarReplace(data, sidebarData);\n                  break;\n            }\n         }\n         catch (err)\n         {\n            console.error(err);\n         }\n      }\n\n      // Set the Foundry CSS variable controlling the sidebar element width w/ the additional sidebar tab buttons\n      // cumulative width.\n      document.querySelector(':root').style.setProperty('--sidebar-width',\n       `${data.initialSidebarWidth + data.addedSidebarWidth}px`);\n\n      this.#initPromise.resolve(this);\n   }\n\n   /**\n    * Returns a loaded and configured sidebar entry by ID.\n    *\n    * @param {string}   id - The ID of the sidebar to retrieve.\n    *\n    * @returns {FVTTSidebarEntry} The sidebar entry.\n    */\n   static get(id)\n   {\n      return this.#sidebars.get(id);\n   }\n\n   /**\n    * Removes an existing sidebar tab / panel.\n    *\n    * @param {FVTTSidebarRemoveData}   sidebarData - The configuration object to remove a Svelte sidebar.\n    */\n   static remove(sidebarData)\n   {\n      try\n      {\n         if (!isObject(sidebarData))\n         {\n            throw new TypeError(`FVTTSidebarControl.remove error: 'sidebarData' is not an object.`);\n         }\n\n         if (typeof sidebarData.id !== 'string')\n         {\n            throw new TypeError(`FVTTSidebarControl.remove error: 'sidebarData.id' is not a string.`);\n         }\n\n         if (sidebarData.condition !== void 0 && typeof sidebarData.condition !== 'boolean' &&\n          typeof sidebarData.condition !== 'function')\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData.condition' is not a boolean or function.`);\n         }\n\n         // Verify that there is an entry for `sidebarData.id` defined in 'CONFIG.ui` indicating that the ID\n         // is available to remove.\n         if (CONFIG.ui[sidebarData.id] === void 0)\n         {\n            throw new Error(`FVTTSidebarControl.remove error - 'sidebarData.id' (${\n             sidebarData.id}) not found in 'CONFIG.ui'.`);\n         }\n\n         // Remove existing Application reference for `sidebarData.id`.\n         // delete CONFIG.ui[sidebarData.id];\n\n         if (this.#initData.length === 0)\n         {\n            this.#initPromise.create();\n\n            Hooks.once('renderSidebar', () => this.#initialize());\n         }\n\n         const sidebar = {\n            ...sidebarData,\n            action: 'remove'\n         };\n\n         this.#initData.push(sidebar);\n      }\n      catch (err)\n      {\n         console.error(err);\n      }\n   }\n\n   /**\n    * Replaces an existing sidebar tab / panel with a new Svelte powered sidebar.\n    *\n    * @param {FVTTSidebarReplaceData}   sidebarData - The configuration object to replace a core sidebar with a Svelte\n    *        sidebar.\n    */\n   static replace(sidebarData)\n   {\n      try\n      {\n         if (!isObject(sidebarData))\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData' is not an object.`);\n         }\n\n         if (typeof sidebarData.icon !== 'string' && !isObject(sidebarData.icon))\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData.icon' is not a string or object.`);\n         }\n\n         if (typeof sidebarData.id !== 'string')\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData.id' is not a string.`);\n         }\n\n         if (sidebarData.condition !== void 0 && typeof sidebarData.condition !== 'boolean' &&\n          typeof sidebarData.condition !== 'function')\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData.condition' is not a boolean or function.`);\n         }\n\n         if (sidebarData.mergeAppImpl !== void 0 && !isObject(sidebarData.mergeAppImpl))\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData.mergeAppImpl' is not an object.`);\n         }\n\n         if (sidebarData.popoutApplication !== void 0 && !hasPrototype(sidebarData.popoutApplication, SvelteApp))\n         {\n            throw new TypeError(\n             `FVTTSidebarControl.replace error: 'sidebarData.popoutApplication' is not a SvelteApp.`);\n         }\n\n         if (sidebarData.popoutOptions !== void 0 && !isObject(sidebarData.popoutOptions))\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData.popoutOptions' is not an object.`);\n         }\n\n         if (sidebarData.title !== void 0 && typeof sidebarData.title !== 'string')\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData.title' is not a string.`);\n         }\n\n         if (sidebarData.tooltip !== void 0 && typeof sidebarData.tooltip !== 'string')\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error: 'sidebarData.tooltip' is not a string.`);\n         }\n\n         // Verify that there is an entry for `sidebarData.id` defined in 'CONFIG.ui` indicating that the ID\n         // is available to replace.\n         if (CONFIG.ui[sidebarData.id] === void 0)\n         {\n            throw new Error(`FVTTSidebarControl.replace error - 'sidebarData.id' (${\n             sidebarData.id}) not found in 'CONFIG.ui'.`);\n         }\n\n         let svelteConfig;\n\n         try\n         {\n            svelteConfig = TJSSvelte.config.parseConfig(sidebarData.svelte);\n         }\n         catch (err)\n         {\n            throw new TypeError(`FVTTSidebarControl.replace error parsing 'sidebarData.svelte'; ${err.message}`);\n         }\n\n         // Parse any icon defined as a Svelte configuration object.\n\n         let iconSvelteConfig;\n\n         if (isObject(sidebarData.icon))\n         {\n            try\n            {\n               iconSvelteConfig = TJSSvelte.config.parseConfig(sidebarData.icon);\n            }\n            catch (err)\n            {\n               throw new TypeError(`FVTTSidebarControl.replace error parsing 'sidebarData.icon'; ${err.message}`);\n            }\n         }\n\n         if (this.#initData.length === 0)\n         {\n            this.#initPromise.create();\n\n            Hooks.once('renderSidebar', () => this.#initialize());\n         }\n\n         const sidebar = {\n            ...sidebarData,\n            svelteConfig,\n            iconSvelteConfig,\n            action: 'replace'\n         };\n\n         // Defines the default options to use when `popoutApplication` is not defined.\n         sidebar.popoutOptions = {\n            // Default SvelteApp options.\n            id: `${sidebarData.id}-popout`,\n            title: sidebarData.title ?? sidebarData.tooltip,\n            classes: ['tab', 'sidebar-tab', 'sidebar-popout'],\n            height: 'auto',\n            width: 300,\n            svelte: {\n               class: FVTTSidebarPopout,\n               target: document.body,\n               props: {\n                  sidebarData: sidebar\n               }\n            },\n\n            // Allow overriding of SvelteApp options.\n            ...(sidebarData.popoutOptions ?? {})\n         };\n\n         this.#initData.push(sidebar);\n      }\n      catch (err)\n      {\n         console.error(err);\n      }\n   }\n\n   /**\n    * Handles adding the new Svelte sidebar tab / panel.\n    *\n    * @param {object}   data - Data for tracking sidebar changes.\n    *\n    * @param {object}   sidebarData - Sidebar data to add.\n    */\n   static #sidebarAdd(data, sidebarData)\n   {\n      // Verify if new sidebar ID is not already defined in 'globalThis.ui` indicating that the ID is taken.\n      if (globalThis.ui[sidebarData.id] !== void 0)\n      {\n         throw new Error(`FVTTSidebarControl.#sidebarAdd error - 'sidebarData.id' (${\n          sidebarData.id}) is already in use in 'globalThis.ui'.`);\n      }\n\n      let anchorButtonEl;\n\n      // Attempt to find the `beforeId` tab to set as the before anchor when mounting new sidebar button.\n      if (sidebarData.beforeId)\n      {\n         anchorButtonEl = data.tabsEl.querySelector(`[data-tab=${sidebarData.beforeId}]`);\n\n         if (!(anchorButtonEl instanceof HTMLElement))\n         {\n            throw new TypeError(\n             `FVTTSidebarControl.#sidebarAdd error - Could not locate sidebar tab for 'sidebarData.beforeId': ${\n              sidebarData.beforeId}.`);\n         }\n      }\n\n      const sidebarTab = new FVTTSidebarTab({\n         target: data.tabsEl,\n         anchor: anchorButtonEl,\n         props: {\n            sidebarData\n         }\n      });\n\n      // Get width of the tab to increase sidebar element width CSS var.\n      data.addedSidebarWidth += StyleParse.pixels(globalThis.getComputedStyle(sidebarTab.anchorEl).width);\n\n      // -------------------\n\n      let anchorSectionEl;\n\n      // Attempt to find the `beforeId` tab to set as the before anchor when mounting new sidebar.\n      if (sidebarData.beforeId)\n      {\n         // At this moment the core sidebar apps are not rendered yet so are `template` and `section` elements. Also\n         // Check for `section` elements in case of indexing by another Svelte sidebar added prior.\n         anchorSectionEl = data.sidebarEl.querySelector(`template[data-tab=${sidebarData.beforeId}]`) ??\n          data.sidebarEl.querySelector(`section[data-tab=${sidebarData.beforeId}]`);\n\n         if (!(anchorSectionEl instanceof HTMLElement))\n         {\n            throw new TypeError(\n             `FVTTSidebarControl.#sidebarAdd error - Could not locate sidebar for 'sidebarData.beforeId': ${\n              sidebarData.beforeId}.`);\n         }\n      }\n\n      // Note: The new sidebar tab section is added at the end of the `section` elements and this is fine.\n      const sidebarWrapper = new FVTTSidebarWrapper({\n         target: data.sidebarEl,\n         anchor: anchorSectionEl,\n         props: {\n            sidebarData\n         }\n      });\n\n      /** @type {FVTTSidebarEntry} */\n      const sidebarEntry = {\n         data: sidebarData,\n         popout: sidebarData.popoutApplication !== void 0 ? new sidebarData.popoutApplication() :\n          new SvelteApp(sidebarData.popoutOptions),\n         tab: sidebarTab,\n         wrapper: sidebarWrapper\n      };\n\n      Object.freeze(sidebarEntry);\n\n      // Fake the bare minimum API necessary for a Foundry sidebar tab which is added to `globalThis.ui`.\n      globalThis.ui[`${sidebarData.id}`] = Object.assign(sidebarData.mergeAppImpl ?? {}, {\n         /**\n          * Provides an accessor to retrieve the popout application as a sanity case.\n          *\n          * @returns {SvelteApp} The popout application.\n          * @protected\n          */\n         get _popout()\n         {\n            return sidebarEntry?.popout;\n         },\n\n         /**\n          * Renders the popout application and is invoked by {@link Sidebar} when the sidebar tab is right-clicked.\n          *\n          * @returns {SvelteApp} Popout application.\n          */\n         renderPopout: () => sidebarEntry?.popout?.render?.(true, { focus: true }),\n\n         /**\n          * No-op; added as sanity measure.\n          */\n         render() {}\n      });\n\n      this.#sidebars.set(sidebarData.id, sidebarEntry);\n   }\n\n   /**\n    * Handles removing an existing sidebar.\n    *\n    * @param {object}   data - Data for tracking sidebar changes.\n    *\n    * @param {object}   sidebarData - Sidebar data to remove.\n    */\n   static #sidebarRemove(data, sidebarData)\n   {\n      // Remove specific sidebar app from Foundry core Sidebar class. This prevents rendering of that sidebar and\n      // must be removed here after the `condition` check in #initialize.\n      delete globalThis.ui?.sidebar?.tabs[sidebarData.id];\n\n      // Attempt to find the `id` tab to set as the before anchor when mounting new sidebar button.\n      const anchorButtonEl = data.tabsEl.querySelector(`[data-tab=${sidebarData.id}]`);\n\n      if (!(anchorButtonEl instanceof HTMLElement))\n      {\n         throw new TypeError(\n          `FVTTSidebarControl.#sidebarRemove error - Could not locate sidebar tab for 'sidebarData.id': ${\n           sidebarData.id}.`);\n      }\n\n      // Remove width of the old replaced tab width.\n      data.addedSidebarWidth -= StyleParse.pixels(globalThis.getComputedStyle(anchorButtonEl).width);\n\n      // -------------------\n\n      // Attempt to find the existing `id` panel.\n      const anchorSectionEl = data.sidebarEl.querySelector(`template[data-tab=${sidebarData.id}]`) ??\n       data.sidebarEl.querySelector(`section[data-tab=${sidebarData.id}]`);\n\n      if (!(anchorSectionEl instanceof HTMLElement))\n      {\n         throw new TypeError(\n          `FVTTSidebarControl.#sidebarRemove error - Could not locate sidebar for 'sidebarData.id': ${\n           sidebarData.id}.`);\n      }\n\n      // Remove old sidebar tab / panel.\n      anchorButtonEl.remove();\n      anchorSectionEl.remove();\n   }\n\n   /**\n    * Handles replacing an existing sidebar with a new Svelte sidebar tab / panel.\n    *\n    * @param {object}   data - Data for tracking sidebar changes.\n    *\n    * @param {object}   sidebarData - Sidebar data to replace.\n    */\n   static #sidebarReplace(data, sidebarData)\n   {\n      // Remove specific sidebar app from Foundry core Sidebar class. This prevents rendering of that sidebar and\n      // must be removed here after the `condition` check in #initialize.\n      delete globalThis.ui?.sidebar?.tabs[sidebarData.id];\n\n      // Attempt to find the `id` tab to set as the before anchor when mounting new sidebar button.\n      const anchorButtonEl = data.tabsEl.querySelector(`[data-tab=${sidebarData.id}]`);\n\n      if (!(anchorButtonEl instanceof HTMLElement))\n      {\n         throw new TypeError(\n          `FVTTSidebarControl.#sidebarReplace error - Could not locate sidebar tab for 'sidebarData.id': ${\n           sidebarData.id}.`);\n      }\n\n      const sidebarTab = new FVTTSidebarTab({\n         target: data.tabsEl,\n         anchor: anchorButtonEl,\n         props: {\n            sidebarData\n         }\n      });\n\n      // Remove width of the old replaced tab width.\n      data.addedSidebarWidth -= StyleParse.pixels(globalThis.getComputedStyle(anchorButtonEl).width);\n\n      // Get width of the tab to increase sidebar element width CSS var.\n      data.addedSidebarWidth += StyleParse.pixels(globalThis.getComputedStyle(sidebarTab.anchorEl).width);\n\n      // -------------------\n\n      // Attempt to find the `id` tab to set as the before anchor when mounting new sidebar.\n      // At this moment the core sidebar apps are not rendered yet so are `template` and `section` elements. Also\n      // Check for `section` elements in case of indexing by another Svelte sidebar added prior.\n      const anchorSectionEl = data.sidebarEl.querySelector(`template[data-tab=${sidebarData.id}]`) ??\n       data.sidebarEl.querySelector(`section[data-tab=${sidebarData.id}]`);\n\n      if (!(anchorSectionEl instanceof HTMLElement))\n      {\n         throw new TypeError(\n          `FVTTSidebarControl.#sidebarReplace error - Could not locate sidebar for 'sidebarData.id': ${\n           sidebarData.id}.`);\n      }\n\n      // Note: The new sidebar tab section is added at the end of the `section` elements and this is fine.\n      const sidebarWrapper = new FVTTSidebarWrapper({\n         target: data.sidebarEl,\n         anchor: anchorSectionEl,\n         props: {\n            sidebarData\n         }\n      });\n\n      /** @type {FVTTSidebarEntry} */\n      const sidebarEntry = {\n         data: sidebarData,\n         popout: sidebarData.popoutApplication !== void 0 ? new sidebarData.popoutApplication() :\n          new SvelteApp(sidebarData.popoutOptions),\n         tab: sidebarTab,\n         wrapper: sidebarWrapper\n      };\n\n      Object.freeze(sidebarEntry);\n\n      // Fake the bare minimum API necessary for a Foundry sidebar tab which is added to `globalThis.ui`.\n      globalThis.ui[`${sidebarData.id}`] = Object.assign(sidebarData.mergeAppImpl ?? {}, {\n         /**\n          * Provides an accessor to retrieve the popout application as a sanity case.\n          *\n          * @returns {SvelteApp} The popout application.\n          * @protected\n          */\n         get _popout()\n         {\n            return sidebarEntry?.popout;\n         },\n\n         /**\n          * Renders the popout application and is invoked by {@link Sidebar} when the sidebar tab is right-clicked.\n          *\n          * @returns {SvelteApp} Popout application.\n          */\n         renderPopout: () => sidebarEntry?.popout?.render?.(true, { focus: true }),\n\n         /**\n          * No-op; added as sanity measure.\n          */\n         render() {}\n      });\n\n      // Remove old sidebar tab / panel.\n      anchorButtonEl.remove();\n      anchorSectionEl.remove();\n\n      this.#sidebars.set(sidebarData.id, sidebarEntry);\n   }\n\n   /**\n    * Provides a Promise that is resolved after all added sidebars are initialized. This is useful when additional\n    * setup or configuration of sidebars needs to be performed after sidebar initialization.\n    *\n    * @returns {Promise} Initialization Promise.\n    */\n   static wait()\n   {\n      return this.#initPromise.get();\n   }\n}\n\n/**\n * @typedef {object} FVTTSidebarAddData The configuration object to add a Svelte sidebar.\n *\n * @property {string}   id The unique Sidebar ID / name. Used for CSS ID and retrieving the sidebar.\n *\n * @property {string|import('#runtime/svelte/util').TJSSvelte.Config.Embed}  icon The FontAwesome icon css classes\n * _or_ a Svelte configuration object to load a custom Svelte component to use as the \"icon\".\n *\n * @property {import('#runtime/svelte/util').TJSSvelte.Config.Embed}   svelte A Svelte configuration object.\n *\n * @property {string}   [beforeId] The ID for the tab to place the new sidebar before. This must be an\n * existing sidebar tab ID. THe stock Foundry sidebar tab IDs from left to right are:\n *\n * @property {boolean | (() => boolean)}  [condition] A boolean value or function to invoke that returns a\n * boolean value to control sidebar replacement. This is executed in the `renderSidebar` callback\n * internally.\n *\n * @property {object}   [mergeAppImpl] Provides a custom base implementation for the object instance\n * for this sidebar app stored in `globalThis.ui.<SIDEBAR ID>`.\n *\n * @property {import('#runtime/svelte/application').SvelteApp}   [popoutApplication] Provides a custom\n * SvelteApp class to instantiate for the popout sidebar.\n *\n * @property {object}   [popoutOptions] Provides SvelteApp options overrides for the default popout sidebar.\n *\n * @property {string}   [title] The popout application title text or i18n lang key.\n *\n * @property {string}   [tooltip] The sidebar tab tooltip text or i18n lang key.\n */\n\n/**\n * @typedef {object} FVTTSidebarRemoveData\n *\n * @property {string}   id The ID for the sidebar tab to remove. This must be an existing sidebar tab ID.\n *\n * @property {boolean | (() => boolean)}   [condition] A boolean value or function to invoke that returns a boolean\n * value to control sidebar replacement. This is executed in the `renderSidebar` callback internally.\n */\n\n/**\n * @typedef {object} FVTTSidebarReplaceData The configuration object to replace a core sidebar with a Svelte sidebar.\n *\n * @property {string|import('#runtime/svelte/util').TJSSvelte.Config.Embed}  icon The FontAwesome icon css classes _or_\n * a Svelte configuration object to load a custom Svelte component to use as the \"icon\".\n *\n * @property {string}   id The ID for the sidebar to replace. This must be an existing sidebar tab ID.\n *\n * @property {import('#runtime/svelte/util').TJSSvelte.Config.Embed}   svelte A Svelte configuration object.\n *\n * @property {boolean | (() => boolean)}   [condition] A boolean value or function to invoke that returns a boolean\n * value to control sidebar replacement. This is executed in the `renderSidebar` callback internally.\n *\n * @property {object}   [mergeAppImpl] Provides a custom base implementation for the object instance for this sidebar\n * app stored in `globalThis.ui.<SIDEBAR ID>`.\n *\n * @property {import('#runtime/svelte/application').SvelteApp}   [popoutApplication] Provides a custom\n * SvelteApp class to instantiate for the popout sidebar.\n *\n * @property {object}   [popoutOptions] Provides SvelteApp options overrides for the default popout sidebar.\n *\n * @property {string}   [title] The popout application title text or i18n lang key.\n *\n * @property {string}   [tooltip] The sidebar tab tooltip text or i18n lang key.\n */\n\n/**\n * @typedef {object} FVTTSidebarEntry\n *\n * @property {FVTTSidebarAddData | FVTTSidebarRemoveData | FVTTSidebarReplaceData} data The sidebar data that\n * configures a Svelte sidebar.\n *\n * @property {import('#runtime/svelte/application').SvelteApp}  popout The sidebar popout application.\n *\n * @property {import('svelte').SvelteComponent} tab The tab wrapper component.\n *\n * @property {import('svelte').SvelteComponent} wrapper The sidebar wrapper component.\n */\n"],"names":[],"mappings":"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Y,IAAI,EAAE,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,OAAO;AACpB,SAAS;AACT,YAAY,OAAO,YAAY,EAAE,MAAM;AACvC,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,EAAE,MAAM,YAAY,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;AAElF;AACA;AACA;AACA,SAAS,MAAM,GAAG;AAClB,OAAO,CAAC;;AAER;AACA,MAAM,cAAc,CAAC,MAAM,EAAE;AAC7B,MAAM,eAAe,CAAC,MAAM,EAAE;;AAE9B,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,YAAY,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,IAAI;AACd,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}