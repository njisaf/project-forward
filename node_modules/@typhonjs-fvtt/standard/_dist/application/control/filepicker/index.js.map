{"version":3,"file":"index.js","sources":["../../../../src/application/control/filepicker/FVTTFilePickerControl.js"],"sourcesContent":["import { fade }               from 'svelte/transition';\n\nimport { TJSDialog }          from '#runtime/svelte/application';\nimport { TJSGlassPane }       from '#runtime/svelte/component/application';\nimport { TJSSvelte }          from '#runtime/svelte/util';\nimport { nextAnimationFrame } from '#runtime/util/animate';\nimport { CrossWindow }        from '#runtime/util/browser';\nimport { A11yHelper }         from '#runtime/util/a11y';\nimport { ManagedPromise }     from '#runtime/util/async';\nimport {\n   isIterable,\n   isObject }                 from '#runtime/util/object';\n\n/**\n * Provides managed control of the Foundry {@link fvtt.FilePicker} app simplifying asynchronous use cases. While the stock\n * FilePicker provides a callback it is not easy to make it asynchronous given that a user can close the app.\n * FVTTFilePickerControl enables a fully asynchronous workflow controlling one FilePicker instance at a time. When\n * {@link FVTTFilePickerControl.browse} is invoked any previous FilePicker instance is closed and Promise resolved.\n *\n * Additionally, the file picker app is modified to work in modal context w/ TJSGlassPane along with any managing\n * associated dialog instances displayed. A very powerful capability is to display a modal FilePicker app instance.\n *\n * For extended options available for {@link FVTTFilePickerControl.browse} see {@link FVTTFilePickerBrowseOptions}.\n * It is highly recommended that you provide a unique CSS ID for each file picker instance invoked.\n * A use case where you should use FVTTFilePickerControl is to invoke {@link FVTTFilePickerControl.close}\n * in an `onDestroy` Svelte callback to close any open file picker apps associated w/ UI layout components you design.\n *\n * A demo example is available in `essential-svelte-esm`:\n * {@link https://github.com/typhonjs-fvtt-demo/essential-svelte-esm}\n *\n * Several ready-made Svelte components are available that are designed around FVTTFilePickerControl.\n *\n * Please see the following Svelte components that can be imported from `#standard/component/fvtt/filepicker/button`:\n *\n * @see TJSFileButton - A standard form button element.\n * @see TJSFileIconButton - Uses TJSIconButton for display.\n * @see TJSFileSlotButton - Provides a slotted button where you can provide any containing content.\n */\nexport class FVTTFilePickerControl\n{\n   static #managedPromise = new ManagedPromise();\n\n   /** @type {TJSFilePicker} */\n   static #filepickerApp;\n\n   /**\n    * @returns {boolean} Test if the current user can browse files.\n    */\n   static get canBrowse()\n   {\n      return game.world && game.user.can('FILES_BROWSE');\n   }\n\n   /**\n    * Brings any non-modal / glasspane file picker to top. Returning if it is the active file picker.\n    *\n    * @param {string} [id] - The ID of the file picker app.\n    *\n    * @returns {boolean} Whether the file picker app is brought to top.\n    */\n   static bringToTop(id)\n   {\n      // Handle the case when no `id` is defined and potentially bring any file picker app to top.\n      if (id === void 0 && this.#filepickerApp)\n      {\n         // Only invoke `bringToTop` if the file picker app is not contained in a glasspane.\n         if (!this.#filepickerApp?.hasGlasspane) { this.#filepickerApp?.bringToTop?.(); }\n         return true;\n      }\n\n      if (typeof id !== 'string')\n      {\n         throw new TypeError(`FVTTFilePickerControl.bringToTop error: 'id' is not a string.`);\n      }\n\n      let result = false;\n\n      if (this.#filepickerApp && this.#filepickerApp.id === id)\n      {\n         // Only invoke `bringToTop` if the file picker app is not contained in a glasspane.\n         if (!this.#filepickerApp?.hasGlasspane) { this.#filepickerApp?.bringToTop?.(); }\n\n         result = true;\n      }\n\n      return result;\n   }\n\n   /**\n    * Creates a new Foundry FilePicker app to browse and return a file path selection.\n    *\n    * @param {FVTTFilePickerBrowseOptions} [options] - FVTTFilePickerControl browse options. This may also include any\n    *        Application options.\n    *\n    * @param {KeyboardEvent | MouseEvent} [event] - An event to inspect for focus management when a modal file picker\n    *        is launched.\n    *\n    * @returns {Promise<string|null>} The file picker / browse result.\n    */\n   static async browse(options = {}, event)\n   {\n      if (!this.canBrowse) { return null; }\n\n      return this.#browseImpl(options, event);\n   }\n\n   /**\n    * Closes the file picker with optional `id` of a specific file picker app to close. You may also provide a list of\n    * app IDs to close. When provided only the file picker app instance with a matching ID will be closed.\n    *\n    * Note: When `close` is invoked w/ no `id` parameter any current file picker app is closed.\n    *\n    * @param {string | Iterable<string>}  [id] - Specific IDs to match against any current visible file picker app.\n    */\n   static close(id)\n   {\n      if (id !== void 0 && typeof id !== 'string' && !isIterable(id))\n      {\n         throw new TypeError(`FVTTFilePickerControl.close error: 'id' is not a string or list of strings.`);\n      }\n\n      if (this.#filepickerApp === void 0) { return; }\n\n      let close = false;\n\n      if (id !== void 0)\n      {\n         if (typeof id === 'string' && this.#filepickerApp?.id === id)\n         {\n            close = true;\n         }\n         else if (isIterable(id))\n         {\n            for (const appId of id)\n            {\n               if (typeof appId === 'string' && this.#filepickerApp?.id === appId)\n               {\n                  close = true;\n               }\n            }\n         }\n      }\n      else\n      {\n         close = true;\n      }\n\n      if (close) { this.#filepickerApp?.close?.(); }\n   }\n\n   /**\n    * Creates a new Foundry FilePicker app to browse and return a file path selection.\n    *\n    * @param {FVTTFilePickerBrowseOptions} [options] - FVTTFilePickerControl browse options. This may also include any\n    *        Application options.\n    *\n    * @param {KeyboardEvent | MouseEvent} [event] - An event to inspect for focus management when a modal file picker\n    *        is launched.\n    *\n    * @returns {Promise<string | null>} The file picker / browse result.\n    */\n   static async #browseImpl(options, event)\n   {\n      if (options?.glasspaneId !== void 0 && typeof options.glasspaneId !== 'string')\n      {\n         throw new TypeError(`FVTTFilePickerControl.browse error: 'glasspaneId' is not a string.`);\n      }\n\n      if (options?.zIndex !== void 0 && !Number.isInteger(options?.zIndex) && options?.zIndex < 0)\n      {\n         throw new TypeError(`FVTTFilePickerControl.browse error: 'zIndex' is not a positive integer.`);\n      }\n\n      if (event !== void 0 && !CrossWindow.isUserInputEvent(event))\n      {\n         throw new TypeError(\n          `FVTTFilePickerControl.browse error: 'event' is not a KeyboardEvent, MouseEvent, or PointerEvent.`);\n      }\n\n      // Store the explicit zIndex / glasspaneId. This may be modified if the file picker is to be modal.\n      let glasspaneId = options?.glasspaneId;\n\n      // If there is an existing glasspaneId to promote to then force the z-index to above everything else.\n      const zIndex = glasspaneId ? Number.MAX_SAFE_INTEGER : options?.zIndex;\n\n      // Handle the case when an existing file picker app is visible.\n      if (this.#filepickerApp)\n      {\n         const element = this.#filepickerApp?._element?.[0];\n         if (element instanceof HTMLElement && element.isConnected)\n         {\n            // Immediately hide window by setting a negative z-index.\n            element.style.zIndex = `${Number.MIN_SAFE_INTEGER}`;\n         }\n\n         // Make sure the app is closed and promise is resolved. Execution will continue below.\n         await this.#filepickerApp?.close?.();\n      }\n\n      // Handle the case when multiple invocations of `FVTTFilePickerControl.browse` in quick succession. When the managed\n      // Promise is still active resolve immediately with no results.\n      if (this.#managedPromise.isActive) { return Promise.resolve(null); }\n\n      const promise = this.#managedPromise.create();\n\n      promise.finally(() => this.#filepickerApp = void 0);\n\n      // Handle modal case -------------------------------------------------------------------------------------------\n\n      const modalOptions = isObject(options?.modalOptions) ? options.modalOptions : {};\n\n      // If there is an existing glasspane is specified do not create a new glasspane.\n      if (typeof glasspaneId === 'string')\n      {\n         const gpEl = document.querySelector(`#${glasspaneId}`);\n         if (gpEl)\n         {\n            // Capture and act first on `glasspane:keydown:escape` closing the file picker, but stopping any modal\n            // dialog underneath from closing as well.\n            gpEl.addEventListener('glasspane:keydown:escape', (event) =>\n            {\n               event.preventDefault();\n               event.stopImmediatePropagation();\n\n               this.#filepickerApp?.close?.();\n            }, { capture: true, once: true });\n\n            // If `closeOnInput` is true register a listener on the existing glasspane for the `glasspane:pointerdown`\n            // event to close the file picker app.\n            if (typeof modalOptions?.closeOnInput === 'boolean' && modalOptions?.closeOnInput)\n            {\n               gpEl.addEventListener('glasspane:pointerdown', () => this.#filepickerApp?.close?.(), { once: true });\n            }\n         }\n         else\n         {\n            console.warn(`FVTTFilePickerControl.browse warning: Could not locate glasspane for CSS ID: ${glasspaneId}`);\n         }\n      }\n\n      // Otherwise if there isn't an existing glasspane specified and `modal` is true then create a new TJSGlassPane\n      // component.\n      else if (typeof options?.modal === 'boolean' && options.modal)\n      {\n         glasspaneId = 'fvtt-file-picker-glasspane';\n\n         const gp = new TJSGlassPane({\n            target: document.body,\n            props: {\n               id: glasspaneId,\n               background: typeof modalOptions?.background === 'string' ? modalOptions.background : void 0,\n               closeOnInput: typeof modalOptions?.closeOnInput === 'boolean' ? modalOptions.closeOnInput : void 0,\n               transition: modalOptions?.transition ?? fade,\n               transitionOptions: modalOptions?.transitionOptions ?? { duration: 200 },\n               styles: isObject(modalOptions?.styles) ? modalOptions?.styles : void 0\n            }\n         });\n\n         // When `closeOnInput` is true and a click on the glasspane occurs close the file picker app.\n         gp.$on('glasspane:close', () => this.#filepickerApp?.close?.());\n\n         // Close the file picker whenever the escape key is pressed.\n         gp.$on('glasspane:keydown:escape', () => this.#filepickerApp?.close?.());\n\n         // Destroy the glasspane component when the Promise is resolved.\n         promise.finally(() => TJSSvelte.util.outroAndDestroy(gp));\n      }\n\n      // If an event is defined determine a potential focus source. When the file picker app is closed this element\n      // resumes focus.\n      const focusSource = glasspaneId && event ? A11yHelper.getFocusSource({ event }) : void 0;\n\n      // -------------------------------------------------------------------------------------------------------------\n\n      this.#filepickerApp = new TJSFilePicker({\n         popOutModuleDisable: true,\n         minimizable: false,\n         ...options,\n         callback: (result) =>\n         {\n            this.#managedPromise.resolve(result);\n         }\n      }, this.#managedPromise, { focusSource, glasspaneId, zIndex });\n\n      await this.#filepickerApp.browse();\n\n      // By awaiting for the next 3 animation frames the app has been rendered. The extra frames provide a buffer.\n      await nextAnimationFrame(3);\n\n      // Potentially move app inside glasspane.\n      if (typeof glasspaneId === 'string')\n      {\n         const gpContainerEl = document.querySelector(`#${glasspaneId} .tjs-glass-pane-container`);\n         if (gpContainerEl)\n         {\n            gpContainerEl.appendChild(this.#filepickerApp.element[0]);\n\n            // Focus first input.\n            this.#filepickerApp?._element?.[0]?.querySelector('input')?.focus();\n         }\n         else\n         {\n            console.warn(`FVTTFilePickerControl.browse warning: Could not locate glasspane for CSS ID: ${glasspaneId}`);\n         }\n\n         // For modal dialogs prevent the window header from being draggable.\n         const headerEl = this.#filepickerApp._element[0].querySelector('.window-header');\n         if (headerEl)\n         {\n            headerEl.classList.remove('draggable');\n            headerEl.addEventListener('pointerdown', (event) => event.stopPropagation(), true);\n         }\n      }\n\n      // Directly modify the zIndex to be above everything else when supplied.\n      if (Number.isInteger(zIndex))\n      {\n         this.#filepickerApp._element[0].style.zIndex = `${zIndex}`;\n      }\n\n      return promise;\n   }\n}\n\n/**\n * Extends FilePicker to handle resolving the managed Promise on app close, explicitly center the app when shown above\n * a modal / glasspane, and manage any associated dialogs.\n */\nclass TJSFilePicker extends FilePicker\n{\n   /** @type {TJSDialog} */\n   #createDirectoryApp;\n\n   /** @type {import('#runtime/util/browser').A11yFocusSource} */\n   #focusSource;\n\n   /** @type {string} */\n   #glasspaneId;\n\n   /** @type {ManagedPromise} */\n   #managedPromise;\n\n   /** @type {number} */\n   #zIndex;\n\n   constructor(options, managedPromise, { focusSource, glasspaneId, zIndex } = {})\n   {\n      super(options);\n\n      this.#focusSource = focusSource;\n      this.#glasspaneId = glasspaneId;\n      this.#managedPromise = managedPromise;\n      this.#zIndex = zIndex;\n   }\n\n   /**\n    * @returns {boolean} Convenience getter for `FVTTFilePickerControl.bringToTop`.\n    */\n   get hasGlasspane() { return typeof this.#glasspaneId === 'string'; }\n\n   /**\n    * Always focus first input when `bringToTop` is invoked.\n    */\n   bringToTop()\n   {\n      super.bringToTop();\n\n      // Always focus first input when app is brought to top.\n      this?._element?.[0]?.querySelector('input')?.focus();\n   }\n\n   /**\n    * Overridden close method that resolves the managed Promise w/ null and closes any associated create directory\n    * dialog.\n    *\n    * @param {object}   options - Application close options.\n    *\n    * @returns {Promise<void>}\n    */\n   async close(options)\n   {\n      // Close any associated create directory dialog.\n      this.#createDirectoryApp?.close?.();\n      this.#createDirectoryApp = void 0;\n\n      this.#managedPromise?.resolve?.(null);\n      this.#managedPromise = void 0;\n\n      // Make window content overflow hidden to avoid any scrollbars appearing in default Application close animation.\n      const content = this._element?.[0]?.querySelector('.window-content');\n      if (content) { content.style.overflow = 'hidden'; }\n\n      await super.close(options);\n\n      // Apply any stored focus options and then remove them from options.\n      if (this.#focusSource)\n      {\n         A11yHelper.applyFocusSource(this.#focusSource);\n         this.#focusSource = void 0;\n      }\n   }\n\n   /**\n    * Present the user with a dialog to create a subdirectory within their currently browsed file storage location.\n    *\n    * @param {object} source     The data source being browsed\n    *\n    * @private\n    */\n   async _createDirectoryDialog(source)\n   {\n      // Return early if there is an existing create subfolder / directory dialog.\n      if (this.#createDirectoryApp) { return; }\n\n      const form = `<form autocomplete=off><div class=form-group>\n       <label>Directory Name</label>\n       <input type=text name=dirname placeholder=directory-name required/>\n       </div></form>`;\n\n      // The initial target is document.body, but if there is a glasspane container the dialog `svelte.target` is set.\n      let dialogTargetEl = globalThis.document.body;\n\n      // Potentially find any associated glasspane container element and make that dialog Svelte component mount target.\n      if (typeof this.#glasspaneId === 'string')\n      {\n         const gpContainerEl = document.querySelector(`#${this.#glasspaneId} .tjs-glass-pane-container`);\n         if (gpContainerEl)\n         {\n            dialogTargetEl = gpContainerEl;\n         }\n         else\n         {\n            console.warn(`TJSFilePicker._createDirectoryDialog warning: Could not locate glasspane for CSS ID: ${\n             this.#glasspaneId}`);\n         }\n      }\n\n      this.#createDirectoryApp = new TJSDialog({\n         draggable: false,\n         zIndex: Number.MAX_SAFE_INTEGER,\n         title: game.i18n.localize('FILES.CreateSubfolder'),\n         content: form,\n         focusFirst: true,\n         buttons: {\n            onYes: {\n               icon: 'fas fa-check',\n               label: 'Yes',\n               onPress: async ({ application }) =>\n               {\n                  const html = application.elementContent;\n\n                  const dirname = html.querySelector('input').value;\n                  const path = [source.target, dirname].filterJoin('/');\n                  try\n                  {\n                     await this.constructor.createDirectory(this.activeSource, path, { bucket: source.bucket });\n                  }\n                  catch (err)\n                  {\n                     ui.notifications.error(err.message);\n                  }\n                  return this.browse(this.target);\n               }\n            },\n            onNo: {\n               icon: 'fas fa-times',\n               label: 'No'\n            }\n         }\n      }, { svelte: { target: dialogTargetEl }, popOutModuleDisable: true });\n\n      // Use wait to be able to remove the reference when any result is chosen.\n      await this.#createDirectoryApp.wait();\n      this.#createDirectoryApp = void 0;\n   }\n\n   /**\n    * Overridden to explicitly center the file picker app when displayed above a modal / glasspane.\n    *\n    * @param {object}   pos - Position object.\n    *\n    * @returns {{left: number, top: number, width: number, height: number, scale: number}} Position object.\n    */\n   setPosition(pos = {})\n   {\n      const currentPos = super.setPosition(pos);\n\n      if (this.#glasspaneId)\n      {\n         const top = (globalThis.innerHeight - currentPos.height) / 2;\n\n         this._element[0].style.top = `${top}px`;\n         this.position.top = top;\n         currentPos.top = top;\n      }\n\n      return currentPos;\n   }\n}\n\n/**\n * @typedef {object} FVTTFilePickerBrowseOptions - Foundry {@link fvtt.FilePicker} w/ expanded\n *          FVTTFilePickerControl options.\n *\n * @property {string} [type='any']         A type of file to target, in 'audio', 'image', 'video', 'imagevideo',\n *                                         'folder', 'font', 'graphics', 'text', or 'any'.\n *\n * @property {string} [current]            The current file path being modified, if any.\n *\n * @property {string} [activeSource=data]  A current file source in 'data', 'public', or 's3'.\n *\n * @property {Function} [callback]         A callback function to trigger once a file has been selected.\n *\n * @property {boolean} [allowUpload=true]  A flag which permits explicitly disallowing upload, true by default.\n *\n * @property {Map<string, fvtt.FavoriteFolder>} [favorites] A map of favorite folder configuration objects.\n *\n * @property {string} [displayMode]        The picker display mode in FilePicker.DISPLAY_MODES.\n *\n * @property {boolean} [tileSize=false]    Display the tile size configuration.\n *\n * @property {string[]} [redirectToRoot]   Redirect to the root directory rather than starting in the source directory\n *                                         of one of these files.\n *\n * @property {string} [id]                 A specific unique CSS app ID.\n *\n * @property {string} [glasspaneId]        Provide the CSS ID of the glasspane to move the file picker app to after opening.\n *\n * @property {boolean} [modal]             When true a modal file picker will be opened.\n *\n * @property {({\n *    background: string,\n *    closeOnInput: boolean,\n *    styles: { [key: string]: string | null },\n *    transition: import('#runtime/svelte/transition').TransitionFunction,\n *    transitionOptions: { [key: string]: any }\n * })} [modalOptions]                      Options for the modal glasspane / TJSGlasspane component.\n *\n * @property {({ urlString: string }) => void} [onURLString] Optional function invoked when URL string changes.\n *\n * @property {({ urlString: string }) => Promise<boolean>} [onValidateURLString] Optional validation function of\n * selected URL string.\n *\n * @property {import('#runtime/svelte/store/util').MinimalWritable<string>} [store] A minimal writable store that is\n * set with result.\n *\n * @property {number} [zIndex]             Provides an explicit `z-index` for the file picker app.\n */\n"],"names":[],"mappings":"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"}